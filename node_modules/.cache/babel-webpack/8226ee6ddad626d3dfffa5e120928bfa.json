{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eriki/Documents/GitHub/amplify-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, h } from './index-83f2275b.js';\nimport { ConsoleLogger, I18n } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { N as NO_AUTH_MODULE_FOUND, h as AUTH_SOURCE_KEY } from './constants-c8ecaa24.js';\nimport { d as dispatchAuthStateChangeEvent } from './helpers-9703fe65.js';\nconst logger = new ConsoleLogger('amplify-amazon-button');\nconst AmplifyAmazonButton = class {\n  constructor(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.federatedSignIn = response => {\n      const {\n        access_token,\n        expires_in\n      } = response;\n\n      if (!access_token) {\n        return;\n      }\n\n      if (!Auth || typeof Auth.federatedSignIn !== 'function' || typeof Auth.currentAuthenticatedUser !== 'function') {\n        throw new Error(NO_AUTH_MODULE_FOUND);\n      }\n\n      const date = new Date();\n      const expires_at = expires_in * 1000 + date.getTime();\n      window['amazon'].Login.retrieveProfile( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (userInfo) {\n          if (!userInfo.success) {\n            return logger.debug('Get user Info failed');\n          }\n\n          const user = {\n            name: userInfo.profile.Name,\n            email: userInfo.profile.PrimaryEmail\n          };\n          yield Auth.federatedSignIn('amazon', {\n            token: access_token,\n            expires_at\n          }, user);\n          const authenticatedUser = yield Auth.currentAuthenticatedUser();\n\n          _this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n  }\n  /**\n   * @see https://developer.amazon.com/docs/login-with-amazon/install-sdk-javascript.html\n   */\n\n\n  signInWithAmazon(event) {\n    event.preventDefault();\n    window['amazon'].Login.setClientId(this.clientId);\n    window['amazon'].Login.authorize({\n      scope: 'profile'\n    }, response => {\n      if (response.error) {\n        return logger.debug('Failed to login with amazon: ' + response.error);\n      }\n\n      try {\n        window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({\n          provider: 'amazon'\n        }));\n      } catch (e) {\n        logger.debug('Failed to cache auth source into localStorage', e);\n      }\n\n      this.federatedSignIn(response);\n    });\n  }\n\n  render() {\n    return h(\"amplify-sign-in-button\", {\n      onClick: event => this.signInWithAmazon(event),\n      provider: \"amazon\"\n    }, h(\"script\", {\n      src: \"https://assets.loginwithamazon.com/sdk/na/login1.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_AMAZON));\n  }\n\n};\nconst logger$1 = new ConsoleLogger('amplify-auth0-button');\nconst AmplifyAuth0Button = class {\n  constructor(hostRef) {\n    var _this2 = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.handleLoad = () => {\n      // @ts-ignore Property 'auth0' does not exist on type '{}'.\n      const {\n        oauth = {}\n      } = Auth.configure(); // @ts-ignore Property 'auth0' does not exist on type '{}'.\n\n      const {\n        config = oauth.auth0\n      } = this;\n\n      if (!config) {\n        logger$1.debug('Auth0 is not configured');\n        return;\n      }\n\n      logger$1.debug('auth0 configuration', config);\n\n      if (!this._auth0) {\n        this._auth0 = new window['auth0'].WebAuth(config);\n      }\n\n      this._auth0.parseHash((err, authResult) => {\n        if (err) {\n          logger$1.debug('Failed to parse the url for Auth0', err);\n          return;\n        }\n\n        if (!authResult) {\n          logger$1.debug('Auth0 found no authResult in hash');\n          return;\n        }\n\n        const payload = {\n          provider: 'auth0',\n          opts: {\n            returnTo: config.returnTo,\n            clientID: config.clientID,\n            federated: config.federated\n          }\n        };\n\n        try {\n          localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify(payload));\n        } catch (e) {\n          logger$1.debug('Failed to cache auth source into localStorage', e);\n        }\n\n        this._auth0.client.userInfo(authResult.accessToken, /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (err, user) {\n            let username = undefined;\n            let email = undefined;\n\n            if (err) {\n              logger$1.debug('Failed to get the user info', err);\n            } else {\n              username = user.name;\n              email = user.email;\n            }\n\n            yield Auth.federatedSignIn(config.domain, {\n              token: authResult.idToken,\n              expires_at: authResult.expiresIn * 1000 + new Date().getTime()\n            }, {\n              name: username,\n              email\n            });\n            const authenticatedUser = yield Auth.currentAuthenticatedUser();\n\n            _this2.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n          });\n\n          return function (_x2, _x3) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    };\n  }\n\n  signInWithAuth0(event) {\n    event.preventDefault();\n\n    if (!this._auth0) {\n      throw new Error('the auth0 client is not configured');\n    }\n\n    this._auth0.authorize();\n  }\n\n  render() {\n    return h(\"amplify-sign-in-button\", {\n      onClick: event => this.signInWithAuth0(event),\n      provider: \"auth0\"\n    }, h(\"script\", {\n      onLoad: this.handleLoad,\n      src: \"https://cdn.auth0.com/js/auth0/9.11/auth0.min.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_AUTH0));\n  }\n\n};\nconst logger$2 = new ConsoleLogger('amplify-facebook-button');\nconst AmplifyFacebookButton = class {\n  constructor(hostRef) {\n    var _this3 = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.federatedSignIn = authResponse => {\n      const {\n        accessToken,\n        expiresIn\n      } = authResponse;\n\n      if (!accessToken) {\n        return;\n      }\n\n      if (!Auth || typeof Auth.federatedSignIn !== 'function' || typeof Auth.currentAuthenticatedUser !== 'function') {\n        throw new Error(NO_AUTH_MODULE_FOUND);\n      }\n\n      const date = new Date();\n      const expires_at = expiresIn * 1000 + date.getTime();\n      const fields = 'name,email';\n      window['FB'].api('/me', {\n        fields\n      }, /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (response) {\n          const user = {\n            name: response.name,\n            email: response.email\n          };\n          yield Auth.federatedSignIn('facebook', {\n            token: accessToken,\n            expires_at\n          }, user);\n          const authenticatedUser = yield Auth.currentAuthenticatedUser();\n\n          _this3.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n        });\n\n        return function (_x4) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    };\n\n    this.getLoginStatus = () => {\n      window['FB'].getLoginStatus(response => {\n        try {\n          window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({\n            provider: 'facebook'\n          }));\n        } catch (e) {\n          logger$2.debug('Failed to cache auth source into localStorage', e);\n        }\n\n        if (response.status === 'connected') {\n          return this.federatedSignIn(response.authResponse);\n        }\n\n        this.login();\n      });\n    };\n\n    this.login = () => {\n      const scope = 'public_profile,email';\n      window['FB'].login(response => {\n        if (response && response.authResponse) {\n          this.federatedSignIn(response.authResponse);\n        }\n      }, {\n        scope\n      });\n    };\n  }\n  /**\n   * @see https://developers.facebook.com/docs/javascript/reference/FB.init/v5.0\n   */\n\n\n  signInWithFacebook(event) {\n    event.preventDefault();\n    window['FB'].init({\n      appId: this.appId,\n      cookie: true,\n      xfbml: false,\n      version: 'v5.0'\n    });\n    this.getLoginStatus();\n  }\n\n  render() {\n    return h(\"amplify-sign-in-button\", {\n      onClick: event => this.signInWithFacebook(event),\n      provider: \"facebook\"\n    }, h(\"script\", {\n      async: true,\n      defer: true,\n      src: \"https://connect.facebook.net/en_US/sdk.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_FACEBOOK));\n  }\n\n};\nconst logger$3 = new ConsoleLogger('amplify-google-button');\nconst AmplifyGoogleButton = class {\n  constructor(hostRef) {\n    var _this4 = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.handleError = error => {\n      console.error(error);\n    };\n    /**\n     * @see https://developers.google.com/identity/sign-in/web/build-button#building_a_button_with_a_custom_graphic\n     */\n\n\n    this.handleLoad = () => {\n      window['gapi'].load('auth2');\n    };\n\n    this.handleUser = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (user) {\n        if (!Auth || typeof Auth.federatedSignIn !== 'function' || typeof Auth.currentAuthenticatedUser !== 'function') {\n          throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n\n        try {\n          window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({\n            provider: 'google'\n          }));\n        } catch (e) {\n          logger$3.debug('Failed to cache auth source into localStorage', e);\n        }\n\n        const {\n          id_token,\n          expires_at\n        } = user.getAuthResponse();\n        const profile = user.getBasicProfile();\n        yield Auth.federatedSignIn('google', {\n          token: id_token,\n          expires_at\n        }, {\n          email: profile.getEmail(),\n          name: profile.getName(),\n          picture: profile.getImageUrl()\n        });\n        const authenticatedUser = yield Auth.currentAuthenticatedUser();\n\n        try {\n          _this4.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n        } catch (error) {\n          _this4.handleError(error);\n        }\n      });\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  }\n\n  getAuthInstance() {\n    if (window['gapi'] && window['gapi'].auth2) {\n      return window['gapi'].auth2.getAuthInstance() || window['gapi'].auth2.init({\n        client_id: this.clientId,\n        cookiepolicy: 'single_host_origin',\n        scope: 'profile email openid'\n      });\n    }\n\n    return null;\n  }\n\n  signInWithGoogle(event) {\n    event.preventDefault();\n    this.getAuthInstance().signIn().then(this.handleUser).catch(this.handleError);\n  }\n\n  render() {\n    return h(\"amplify-sign-in-button\", {\n      onClick: event => this.signInWithGoogle(event),\n      provider: \"google\"\n    }, h(\"script\", {\n      onLoad: this.handleLoad,\n      src: \"https://apis.google.com/js/api:client.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_GOOGLE));\n  }\n\n};\nconst AmplifyOAuthButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** Federated credentials & configuration. */\n\n    this.config = {};\n  }\n\n  signInWithOAuth(event) {\n    event.preventDefault();\n    Auth.federatedSignIn();\n  }\n\n  render() {\n    return h(\"amplify-sign-in-button\", {\n      onClick: event => this.signInWithOAuth(event),\n      provider: \"oauth\"\n    }, this.config.label || I18n.get(Translations.SIGN_IN_WITH_AWS));\n  }\n\n};\nexport { AmplifyAmazonButton as amplify_amazon_button, AmplifyAuth0Button as amplify_auth0_button, AmplifyFacebookButton as amplify_facebook_button, AmplifyGoogleButton as amplify_google_button, AmplifyOAuthButton as amplify_oauth_button };","map":{"version":3,"sources":["C:/Users/eriki/Documents/GitHub/amplify-app/node_modules/@aws-amplify/ui-components/dist/esm/amplify-amazon-button_5.entry.js"],"names":["r","registerInstance","h","ConsoleLogger","I18n","A","AuthState","Auth","T","Translations","N","NO_AUTH_MODULE_FOUND","AUTH_SOURCE_KEY","d","dispatchAuthStateChangeEvent","logger","AmplifyAmazonButton","constructor","hostRef","handleAuthStateChange","federatedSignIn","response","access_token","expires_in","currentAuthenticatedUser","Error","date","Date","expires_at","getTime","window","Login","retrieveProfile","userInfo","success","debug","user","name","profile","Name","email","PrimaryEmail","token","authenticatedUser","SignedIn","signInWithAmazon","event","preventDefault","setClientId","clientId","authorize","scope","error","localStorage","setItem","JSON","stringify","provider","e","render","onClick","src","get","SIGN_IN_WITH_AMAZON","logger$1","AmplifyAuth0Button","handleLoad","oauth","configure","config","auth0","_auth0","WebAuth","parseHash","err","authResult","payload","opts","returnTo","clientID","federated","client","accessToken","username","undefined","domain","idToken","expiresIn","signInWithAuth0","onLoad","SIGN_IN_WITH_AUTH0","logger$2","AmplifyFacebookButton","authResponse","fields","api","getLoginStatus","status","login","signInWithFacebook","init","appId","cookie","xfbml","version","async","defer","SIGN_IN_WITH_FACEBOOK","logger$3","AmplifyGoogleButton","handleError","console","load","handleUser","id_token","getAuthResponse","getBasicProfile","getEmail","getName","picture","getImageUrl","getAuthInstance","auth2","client_id","cookiepolicy","signInWithGoogle","signIn","then","catch","SIGN_IN_WITH_GOOGLE","AmplifyOAuthButton","signInWithOAuth","label","SIGN_IN_WITH_AWS","amplify_amazon_button","amplify_auth0_button","amplify_facebook_button","amplify_google_button","amplify_oauth_button"],"mappings":"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","sourcesContent":["import { r as registerInstance, h } from './index-83f2275b.js';\nimport { ConsoleLogger, I18n } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { N as NO_AUTH_MODULE_FOUND, h as AUTH_SOURCE_KEY } from './constants-c8ecaa24.js';\nimport { d as dispatchAuthStateChangeEvent } from './helpers-9703fe65.js';\n\nconst logger = new ConsoleLogger('amplify-amazon-button');\nconst AmplifyAmazonButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Auth state change handler for this component\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.federatedSignIn = response => {\n            const { access_token, expires_in } = response;\n            if (!access_token) {\n                return;\n            }\n            if (!Auth ||\n                typeof Auth.federatedSignIn !== 'function' ||\n                typeof Auth.currentAuthenticatedUser !== 'function') {\n                throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n            const date = new Date();\n            const expires_at = expires_in * 1000 + date.getTime();\n            window['amazon'].Login.retrieveProfile(async (userInfo) => {\n                if (!userInfo.success) {\n                    return logger.debug('Get user Info failed');\n                }\n                const user = {\n                    name: userInfo.profile.Name,\n                    email: userInfo.profile.PrimaryEmail,\n                };\n                await Auth.federatedSignIn('amazon', { token: access_token, expires_at }, user);\n                const authenticatedUser = await Auth.currentAuthenticatedUser();\n                this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n            });\n        };\n    }\n    /**\n     * @see https://developer.amazon.com/docs/login-with-amazon/install-sdk-javascript.html\n     */\n    signInWithAmazon(event) {\n        event.preventDefault();\n        window['amazon'].Login.setClientId(this.clientId);\n        window['amazon'].Login.authorize({ scope: 'profile' }, response => {\n            if (response.error) {\n                return logger.debug('Failed to login with amazon: ' + response.error);\n            }\n            try {\n                window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({ provider: 'amazon' }));\n            }\n            catch (e) {\n                logger.debug('Failed to cache auth source into localStorage', e);\n            }\n            this.federatedSignIn(response);\n        });\n    }\n    render() {\n        return (h(\"amplify-sign-in-button\", { onClick: event => this.signInWithAmazon(event), provider: \"amazon\" }, h(\"script\", { src: \"https://assets.loginwithamazon.com/sdk/na/login1.js\" }), I18n.get(Translations.SIGN_IN_WITH_AMAZON)));\n    }\n};\n\nconst logger$1 = new ConsoleLogger('amplify-auth0-button');\nconst AmplifyAuth0Button = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.handleLoad = () => {\n            // @ts-ignore Property 'auth0' does not exist on type '{}'.\n            const { oauth = {} } = Auth.configure();\n            // @ts-ignore Property 'auth0' does not exist on type '{}'.\n            const { config = oauth.auth0 } = this;\n            if (!config) {\n                logger$1.debug('Auth0 is not configured');\n                return;\n            }\n            logger$1.debug('auth0 configuration', config);\n            if (!this._auth0) {\n                this._auth0 = new window['auth0'].WebAuth(config);\n            }\n            this._auth0.parseHash((err, authResult) => {\n                if (err) {\n                    logger$1.debug('Failed to parse the url for Auth0', err);\n                    return;\n                }\n                if (!authResult) {\n                    logger$1.debug('Auth0 found no authResult in hash');\n                    return;\n                }\n                const payload = {\n                    provider: 'auth0',\n                    opts: {\n                        returnTo: config.returnTo,\n                        clientID: config.clientID,\n                        federated: config.federated,\n                    },\n                };\n                try {\n                    localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify(payload));\n                }\n                catch (e) {\n                    logger$1.debug('Failed to cache auth source into localStorage', e);\n                }\n                this._auth0.client.userInfo(authResult.accessToken, async (err, user) => {\n                    let username = undefined;\n                    let email = undefined;\n                    if (err) {\n                        logger$1.debug('Failed to get the user info', err);\n                    }\n                    else {\n                        username = user.name;\n                        email = user.email;\n                    }\n                    await Auth.federatedSignIn(config.domain, {\n                        token: authResult.idToken,\n                        expires_at: authResult.expiresIn * 1000 + new Date().getTime(),\n                    }, { name: username, email });\n                    const authenticatedUser = await Auth.currentAuthenticatedUser();\n                    this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n                });\n            });\n        };\n    }\n    signInWithAuth0(event) {\n        event.preventDefault();\n        if (!this._auth0) {\n            throw new Error('the auth0 client is not configured');\n        }\n        this._auth0.authorize();\n    }\n    render() {\n        return (h(\"amplify-sign-in-button\", { onClick: event => this.signInWithAuth0(event), provider: \"auth0\" }, h(\"script\", { onLoad: this.handleLoad, src: \"https://cdn.auth0.com/js/auth0/9.11/auth0.min.js\" }), I18n.get(Translations.SIGN_IN_WITH_AUTH0)));\n    }\n};\n\nconst logger$2 = new ConsoleLogger('amplify-facebook-button');\nconst AmplifyFacebookButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Auth state change handler for this component\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.federatedSignIn = authResponse => {\n            const { accessToken, expiresIn } = authResponse;\n            if (!accessToken) {\n                return;\n            }\n            if (!Auth ||\n                typeof Auth.federatedSignIn !== 'function' ||\n                typeof Auth.currentAuthenticatedUser !== 'function') {\n                throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n            const date = new Date();\n            const expires_at = expiresIn * 1000 + date.getTime();\n            const fields = 'name,email';\n            window['FB'].api('/me', { fields }, async (response) => {\n                const user = {\n                    name: response.name,\n                    email: response.email,\n                };\n                await Auth.federatedSignIn('facebook', { token: accessToken, expires_at }, user);\n                const authenticatedUser = await Auth.currentAuthenticatedUser();\n                this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n            });\n        };\n        this.getLoginStatus = () => {\n            window['FB'].getLoginStatus(response => {\n                try {\n                    window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({ provider: 'facebook' }));\n                }\n                catch (e) {\n                    logger$2.debug('Failed to cache auth source into localStorage', e);\n                }\n                if (response.status === 'connected') {\n                    return this.federatedSignIn(response.authResponse);\n                }\n                this.login();\n            });\n        };\n        this.login = () => {\n            const scope = 'public_profile,email';\n            window['FB'].login(response => {\n                if (response && response.authResponse) {\n                    this.federatedSignIn(response.authResponse);\n                }\n            }, { scope });\n        };\n    }\n    /**\n     * @see https://developers.facebook.com/docs/javascript/reference/FB.init/v5.0\n     */\n    signInWithFacebook(event) {\n        event.preventDefault();\n        window['FB'].init({\n            appId: this.appId,\n            cookie: true,\n            xfbml: false,\n            version: 'v5.0',\n        });\n        this.getLoginStatus();\n    }\n    render() {\n        return (h(\"amplify-sign-in-button\", { onClick: event => this.signInWithFacebook(event), provider: \"facebook\" }, h(\"script\", { async: true, defer: true, src: \"https://connect.facebook.net/en_US/sdk.js\" }), I18n.get(Translations.SIGN_IN_WITH_FACEBOOK)));\n    }\n};\n\nconst logger$3 = new ConsoleLogger('amplify-google-button');\nconst AmplifyGoogleButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Auth state change handler for this component\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.handleError = error => {\n            console.error(error);\n        };\n        /**\n         * @see https://developers.google.com/identity/sign-in/web/build-button#building_a_button_with_a_custom_graphic\n         */\n        this.handleLoad = () => {\n            window['gapi'].load('auth2');\n        };\n        this.handleUser = async (user) => {\n            if (!Auth ||\n                typeof Auth.federatedSignIn !== 'function' ||\n                typeof Auth.currentAuthenticatedUser !== 'function') {\n                throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n            try {\n                window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({ provider: 'google' }));\n            }\n            catch (e) {\n                logger$3.debug('Failed to cache auth source into localStorage', e);\n            }\n            const { id_token, expires_at } = user.getAuthResponse();\n            const profile = user.getBasicProfile();\n            await Auth.federatedSignIn('google', { token: id_token, expires_at }, {\n                email: profile.getEmail(),\n                name: profile.getName(),\n                picture: profile.getImageUrl(),\n            });\n            const authenticatedUser = await Auth.currentAuthenticatedUser();\n            try {\n                this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n            }\n            catch (error) {\n                this.handleError(error);\n            }\n        };\n    }\n    getAuthInstance() {\n        if (window['gapi'] && window['gapi'].auth2) {\n            return (window['gapi'].auth2.getAuthInstance() ||\n                window['gapi'].auth2.init({\n                    client_id: this.clientId,\n                    cookiepolicy: 'single_host_origin',\n                    scope: 'profile email openid',\n                }));\n        }\n        return null;\n    }\n    signInWithGoogle(event) {\n        event.preventDefault();\n        this.getAuthInstance()\n            .signIn()\n            .then(this.handleUser)\n            .catch(this.handleError);\n    }\n    render() {\n        return (h(\"amplify-sign-in-button\", { onClick: event => this.signInWithGoogle(event), provider: \"google\" }, h(\"script\", { onLoad: this.handleLoad, src: \"https://apis.google.com/js/api:client.js\" }), I18n.get(Translations.SIGN_IN_WITH_GOOGLE)));\n    }\n};\n\nconst AmplifyOAuthButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Federated credentials & configuration. */\n        this.config = {};\n    }\n    signInWithOAuth(event) {\n        event.preventDefault();\n        Auth.federatedSignIn();\n    }\n    render() {\n        return (h(\"amplify-sign-in-button\", { onClick: event => this.signInWithOAuth(event), provider: \"oauth\" }, this.config.label || I18n.get(Translations.SIGN_IN_WITH_AWS)));\n    }\n};\n\nexport { AmplifyAmazonButton as amplify_amazon_button, AmplifyAuth0Button as amplify_auth0_button, AmplifyFacebookButton as amplify_facebook_button, AmplifyGoogleButton as amplify_google_button, AmplifyOAuthButton as amplify_oauth_button };\n"]},"metadata":{},"sourceType":"module"}