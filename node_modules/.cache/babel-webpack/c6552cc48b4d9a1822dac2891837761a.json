{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { ModelPredicateCreator, ModelSortPredicateCreator } from '../../predicates';\nimport { isPredicateObj, OpType, QueryOne } from '../../types';\nimport { exhaustiveCheck, getIndex, getIndexFromAssociation, isModelConstructor, isPrivateMode, traverseModel, validatePredicate, sortCompareFunction } from '../../util';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\n\nvar IndexedDBAdapter = function () {\n  function IndexedDBAdapter() {\n    this.dbName = DB_NAME;\n  }\n\n  IndexedDBAdapter.prototype.checkPrivate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPrivate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , isPrivateMode().then(function (isPrivate) {\n              return isPrivate;\n            })];\n\n          case 1:\n            isPrivate = _a.sent();\n\n            if (isPrivate) {\n              logger.error(\"IndexedDB not supported in this browser's private mode\");\n              return [2\n              /*return*/\n              , Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n            } else {\n              return [2\n              /*return*/\n              , Promise.resolve()];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getStorenameForModel = function (modelConstructor) {\n    var namespace = this.namespaceResolver(modelConstructor);\n    var modelName = modelConstructor.name;\n    return this.getStorename(namespace, modelName);\n  };\n\n  IndexedDBAdapter.prototype.getStorename = function (namespace, modelName) {\n    var storeName = namespace + \"_\" + modelName;\n    return storeName;\n  };\n\n  IndexedDBAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var VERSION, _a, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            if (!!this.initPromise) return [3\n            /*break*/\n            , 2];\n            this.initPromise = new Promise(function (res, rej) {\n              _this.resolve = res;\n              _this.reject = rej;\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.initPromise];\n\n          case 3:\n            _b.sent();\n\n            _b.label = 4;\n\n          case 4:\n            if (sessionId) {\n              this.dbName = DB_NAME + \"-\" + sessionId;\n            }\n\n            this.schema = theSchema;\n            this.namespaceResolver = namespaceResolver;\n            this.modelInstanceCreator = modelInstanceCreator;\n            this.getModelConstructorByModelName = getModelConstructorByModelName;\n            _b.label = 5;\n\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n\n            if (!!this.db) return [3\n            /*break*/\n            , 7];\n            VERSION = 2;\n            _a = this;\n            return [4\n            /*yield*/\n            , idb.openDB(this.dbName, VERSION, {\n              upgrade: function (db, oldVersion, newVersion, txn) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, _b, storeName, origStore, tmpName, newStore, cursor, count, e_1_1, error_2;\n\n                  var e_1, _c;\n\n                  var _this = this;\n\n                  return __generator(this, function (_d) {\n                    switch (_d.label) {\n                      case 0:\n                        if (oldVersion === 0) {\n                          Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                            var namespace = theSchema.namespaces[namespaceName];\n                            Object.keys(namespace.models).forEach(function (modelName) {\n                              var storeName = _this.getStorename(namespaceName, modelName);\n\n                              var store = db.createObjectStore(storeName, {\n                                autoIncrement: true\n                              });\n                              var indexes = _this.schema.namespaces[namespaceName].relationships[modelName].indexes;\n                              indexes.forEach(function (index) {\n                                return store.createIndex(index, index);\n                              });\n                              store.createIndex('byId', 'id', {\n                                unique: true\n                              });\n                            });\n                          });\n                          return [2\n                          /*return*/\n                          ];\n                        }\n\n                        if (!(oldVersion === 1 && newVersion === 2)) return [3\n                        /*break*/\n                        , 16];\n                        _d.label = 1;\n\n                      case 1:\n                        _d.trys.push([1, 14,, 15]);\n\n                        _d.label = 2;\n\n                      case 2:\n                        _d.trys.push([2, 11, 12, 13]);\n\n                        _a = __values(txn.objectStoreNames), _b = _a.next();\n                        _d.label = 3;\n\n                      case 3:\n                        if (!!_b.done) return [3\n                        /*break*/\n                        , 10];\n                        storeName = _b.value;\n                        origStore = txn.objectStore(storeName);\n                        tmpName = \"tmp_\" + storeName;\n                        origStore.name = tmpName;\n                        newStore = db.createObjectStore(storeName, {\n                          keyPath: undefined,\n                          autoIncrement: true\n                        });\n                        newStore.createIndex('byId', 'id', {\n                          unique: true\n                        });\n                        return [4\n                        /*yield*/\n                        , origStore.openCursor()];\n\n                      case 4:\n                        cursor = _d.sent();\n                        count = 0;\n                        _d.label = 5;\n\n                      case 5:\n                        if (!(cursor && cursor.value)) return [3\n                        /*break*/\n                        , 8]; // we don't pass key, since they are all new entries in the new store\n\n                        return [4\n                        /*yield*/\n                        , newStore.put(cursor.value)];\n\n                      case 6:\n                        // we don't pass key, since they are all new entries in the new store\n                        _d.sent();\n\n                        return [4\n                        /*yield*/\n                        , cursor.continue()];\n\n                      case 7:\n                        cursor = _d.sent();\n                        count++;\n                        return [3\n                        /*break*/\n                        , 5];\n\n                      case 8:\n                        // delete original\n                        db.deleteObjectStore(tmpName);\n                        logger.debug(count + \" \" + storeName + \" records migrated\");\n                        _d.label = 9;\n\n                      case 9:\n                        _b = _a.next();\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 10:\n                        return [3\n                        /*break*/\n                        , 13];\n\n                      case 11:\n                        e_1_1 = _d.sent();\n                        e_1 = {\n                          error: e_1_1\n                        };\n                        return [3\n                        /*break*/\n                        , 13];\n\n                      case 12:\n                        try {\n                          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        } finally {\n                          if (e_1) throw e_1.error;\n                        }\n\n                        return [7\n                        /*endfinally*/\n                        ];\n\n                      case 13:\n                        return [3\n                        /*break*/\n                        , 15];\n\n                      case 14:\n                        error_2 = _d.sent();\n                        logger.error('Error migrating IndexedDB data', error_2);\n                        txn.abort();\n                        throw error_2;\n\n                      case 15:\n                        return [2\n                        /*return*/\n                        ];\n\n                      case 16:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              }\n            })];\n\n          case 6:\n            _a.db = _b.sent();\n            this.resolve();\n            _b.label = 7;\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            error_1 = _b.sent();\n            this.reject(error_1);\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype._get = function (storeOrStoreName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, storeName, store, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof storeOrStoreName === 'string') {\n              storeName = storeOrStoreName;\n              index = this.db.transaction(storeName, 'readonly').store.index('byId');\n            } else {\n              store = storeOrStoreName;\n              index = store.index('byId');\n            }\n\n            return [4\n            /*yield*/\n            , index.get(id)];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.save = function (model, condition) {\n    var e_2, _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var modelConstructor, storeName, connectedModels, namespaceName, set, connectionStoreNames, tx, store, fromDB, predicates, predicateObjs, type, isValid, msg, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, store_1, id, fromDB_1, opType, key, e_2_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            storeName = this.getStorenameForModel(modelConstructor);\n            connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[this.namespaceResolver(modelConstructor)], this.modelInstanceCreator, this.getModelConstructorByModelName);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            set = new Set();\n            connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n              var modelName = _a.modelName,\n                  item = _a.item,\n                  instance = _a.instance;\n\n              var storeName = _this.getStorename(namespaceName, modelName);\n\n              set.add(storeName);\n              return {\n                storeName: storeName,\n                item: item,\n                instance: instance\n              };\n            });\n            tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4\n            /*yield*/\n            , this._get(store, model.id)];\n\n          case 2:\n            fromDB = _b.sent();\n\n            if (condition && fromDB) {\n              predicates = ModelPredicateCreator.getPredicates(condition);\n              predicateObjs = predicates.predicates, type = predicates.type;\n              isValid = validatePredicate(fromDB, type, predicateObjs);\n\n              if (!isValid) {\n                msg = 'Conditional update failed';\n                logger.error(msg, {\n                  model: fromDB,\n                  condition: predicateObjs\n                });\n                throw new Error(msg);\n              }\n            }\n\n            result = [];\n            _b.label = 3;\n\n          case 3:\n            _b.trys.push([3, 11, 12, 17]);\n\n            connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n            _b.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , connectionStoreNames_1.next()];\n\n          case 5:\n            if (!(connectionStoreNames_1_1 = _b.sent(), !connectionStoreNames_1_1.done)) return [3\n            /*break*/\n            , 10];\n            resItem = connectionStoreNames_1_1.value;\n            storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance;\n            store_1 = tx.objectStore(storeName_1);\n            id = item.id;\n            return [4\n            /*yield*/\n            , this._get(store_1, id)];\n\n          case 6:\n            fromDB_1 = _b.sent();\n            opType = fromDB_1 === undefined ? OpType.INSERT : OpType.UPDATE;\n            if (!(id === model.id || opType === OpType.INSERT)) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , store_1.index('byId').getKey(item.id)];\n\n          case 7:\n            key = _b.sent();\n            return [4\n            /*yield*/\n            , store_1.put(item, key)];\n\n          case 8:\n            _b.sent();\n\n            result.push([instance, opType]);\n            _b.label = 9;\n\n          case 9:\n            return [3\n            /*break*/\n            , 4];\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            e_2_1 = _b.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 12:\n            _b.trys.push([12,, 15, 16]);\n\n            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , _a.call(connectionStoreNames_1)];\n\n          case 13:\n            _b.sent();\n\n            _b.label = 14;\n\n          case 14:\n            return [3\n            /*break*/\n            , 16];\n\n          case 15:\n            if (e_2) throw e_2.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 17:\n            return [4\n            /*yield*/\n            , tx.done];\n\n          case 18:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.load = function (namespaceName, srcModelName, records) {\n    var records_1, records_1_1, records_2, records_2_1;\n\n    var e_3, _a, e_4, _b, e_5, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, relations, connectionStoreNames, modelConstructor, tx, relations_1, relations_1_1, relation, fieldName, modelName, targetName, storeName, store, modelConstructor_1, _d, recordItem, connectionRecord, e_4_1, recordItem, connectionRecord, e_5_1, e_3_1;\n\n      var _this = this;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            namespace = this.schema.namespaces[namespaceName];\n            relations = namespace.relationships[srcModelName].relationTypes;\n            connectionStoreNames = relations.map(function (_a) {\n              var modelName = _a.modelName;\n              return _this.getStorename(namespaceName, modelName);\n            });\n            modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n\n            if (connectionStoreNames.length === 0) {\n              return [2\n              /*return*/\n              , records.map(function (record) {\n                return _this.modelInstanceCreator(modelConstructor, record);\n              })];\n            }\n\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readonly');\n            _e.label = 1;\n\n          case 1:\n            _e.trys.push([1, 34, 35, 40]);\n\n            relations_1 = __asyncValues(relations);\n            _e.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , relations_1.next()];\n\n          case 3:\n            if (!(relations_1_1 = _e.sent(), !relations_1_1.done)) return [3\n            /*break*/\n            , 33];\n            relation = relations_1_1.value;\n            fieldName = relation.fieldName, modelName = relation.modelName, targetName = relation.targetName;\n            storeName = this.getStorename(namespaceName, modelName);\n            store = tx.objectStore(storeName);\n            modelConstructor_1 = this.getModelConstructorByModelName(namespaceName, modelName);\n            _d = relation.relationType;\n\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'BELONGS_TO':\n                return [3\n                /*break*/\n                , 17];\n\n              case 'HAS_MANY':\n                return [3\n                /*break*/\n                , 30];\n            }\n\n            return [3\n            /*break*/\n            , 31];\n\n          case 4:\n            _e.trys.push([4, 10, 11, 16]);\n\n            records_1 = __asyncValues(records);\n            _e.label = 5;\n\n          case 5:\n            return [4\n            /*yield*/\n            , records_1.next()];\n\n          case 6:\n            if (!(records_1_1 = _e.sent(), !records_1_1.done)) return [3\n            /*break*/\n            , 9];\n            recordItem = records_1_1.value;\n            if (!recordItem[fieldName]) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , this._get(store, recordItem[fieldName])];\n\n          case 7:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            _e.label = 8;\n\n          case 8:\n            return [3\n            /*break*/\n            , 5];\n\n          case 9:\n            return [3\n            /*break*/\n            , 16];\n\n          case 10:\n            e_4_1 = _e.sent();\n            e_4 = {\n              error: e_4_1\n            };\n            return [3\n            /*break*/\n            , 16];\n\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n\n            if (!(records_1_1 && !records_1_1.done && (_b = records_1.return))) return [3\n            /*break*/\n            , 13];\n            return [4\n            /*yield*/\n            , _b.call(records_1)];\n\n          case 12:\n            _e.sent();\n\n            _e.label = 13;\n\n          case 13:\n            return [3\n            /*break*/\n            , 15];\n\n          case 14:\n            if (e_4) throw e_4.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 15:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [3\n            /*break*/\n            , 32];\n\n          case 17:\n            _e.trys.push([17, 23, 24, 29]);\n\n            records_2 = __asyncValues(records);\n            _e.label = 18;\n\n          case 18:\n            return [4\n            /*yield*/\n            , records_2.next()];\n\n          case 19:\n            if (!(records_2_1 = _e.sent(), !records_2_1.done)) return [3\n            /*break*/\n            , 22];\n            recordItem = records_2_1.value;\n            if (!recordItem[targetName]) return [3\n            /*break*/\n            , 21];\n            return [4\n            /*yield*/\n            , this._get(store, recordItem[targetName])];\n\n          case 20:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            delete recordItem[targetName];\n            _e.label = 21;\n\n          case 21:\n            return [3\n            /*break*/\n            , 18];\n\n          case 22:\n            return [3\n            /*break*/\n            , 29];\n\n          case 23:\n            e_5_1 = _e.sent();\n            e_5 = {\n              error: e_5_1\n            };\n            return [3\n            /*break*/\n            , 29];\n\n          case 24:\n            _e.trys.push([24,, 27, 28]);\n\n            if (!(records_2_1 && !records_2_1.done && (_c = records_2.return))) return [3\n            /*break*/\n            , 26];\n            return [4\n            /*yield*/\n            , _c.call(records_2)];\n\n          case 25:\n            _e.sent();\n\n            _e.label = 26;\n\n          case 26:\n            return [3\n            /*break*/\n            , 28];\n\n          case 27:\n            if (e_5) throw e_5.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 28:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 29:\n            return [3\n            /*break*/\n            , 32];\n\n          case 30:\n            // TODO: Lazy loading\n            return [3\n            /*break*/\n            , 32];\n\n          case 31:\n            exhaustiveCheck(relation.relationType);\n            return [3\n            /*break*/\n            , 32];\n\n          case 32:\n            return [3\n            /*break*/\n            , 2];\n\n          case 33:\n            return [3\n            /*break*/\n            , 40];\n\n          case 34:\n            e_3_1 = _e.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3\n            /*break*/\n            , 40];\n\n          case 35:\n            _e.trys.push([35,, 38, 39]);\n\n            if (!(relations_1_1 && !relations_1_1.done && (_a = relations_1.return))) return [3\n            /*break*/\n            , 37];\n            return [4\n            /*yield*/\n            , _a.call(relations_1)];\n\n          case 36:\n            _e.sent();\n\n            _e.label = 37;\n\n          case 37:\n            return [3\n            /*break*/\n            , 39];\n\n          case 38:\n            if (e_3) throw e_3.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 39:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 40:\n            return [2\n            /*return*/\n            , records.map(function (record) {\n              return _this.modelInstanceCreator(modelConstructor, record);\n            })];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, namespaceName, predicates, queryById, hasSort, hasPagination, records;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            storeName = this.getStorenameForModel(modelConstructor);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n            queryById = predicates && this.idFromPredicate(predicates);\n            hasSort = pagination && pagination.sort;\n            hasPagination = pagination && pagination.limit;\n            return [4\n            /*yield*/\n            , function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var record, filtered, all;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!queryById) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , this.getById(storeName, queryById)];\n\n                    case 1:\n                      record = _a.sent();\n                      return [2\n                      /*return*/\n                      , record ? [record] : []];\n\n                    case 2:\n                      if (!predicates) return [3\n                      /*break*/\n                      , 4];\n                      return [4\n                      /*yield*/\n                      , this.filterOnPredicate(storeName, predicates)];\n\n                    case 3:\n                      filtered = _a.sent();\n                      return [2\n                      /*return*/\n                      , this.inMemoryPagination(filtered, pagination)];\n\n                    case 4:\n                      if (!hasSort) return [3\n                      /*break*/\n                      , 6];\n                      return [4\n                      /*yield*/\n                      , this.getAll(storeName)];\n\n                    case 5:\n                      all = _a.sent();\n                      return [2\n                      /*return*/\n                      , this.inMemoryPagination(all, pagination)];\n\n                    case 6:\n                      if (hasPagination) {\n                        return [2\n                        /*return*/\n                        , this.enginePagination(storeName, pagination)];\n                      }\n\n                      return [2\n                      /*return*/\n                      , this.getAll(storeName)];\n                  }\n                });\n              });\n            }()];\n\n          case 2:\n            records = _a.sent();\n            return [4\n            /*yield*/\n            , this.load(namespaceName, modelConstructor.name, records)];\n\n          case 3:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getById = function (storeName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._get(storeName, id)];\n\n          case 1:\n            record = _a.sent();\n            return [2\n            /*return*/\n            , record];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getAll = function (storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.db.getAll(storeName)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.idFromPredicate = function (predicates) {\n    var predicateObjs = predicates.predicates;\n    var idPredicate = predicateObjs.length === 1 && predicateObjs.find(function (p) {\n      return isPredicateObj(p) && p.field === 'id' && p.operator === 'eq';\n    });\n    return idPredicate && idPredicate.operand;\n  };\n\n  IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, all, filtered;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type;\n            return [4\n            /*yield*/\n            , this.getAll(storeName)];\n\n          case 1:\n            all = _a.sent();\n            filtered = predicateObjs ? all.filter(function (m) {\n              return validatePredicate(m, type, predicateObjs);\n            }) : all;\n            return [2\n            /*return*/\n            , filtered];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n    if (pagination && records.length > 1) {\n      if (pagination.sort) {\n        var sortPredicates = ModelSortPredicateCreator.getPredicates(pagination.sort);\n\n        if (sortPredicates.length) {\n          var compareFn = sortCompareFunction(sortPredicates);\n          records.sort(compareFn);\n        }\n      }\n\n      var _a = pagination.page,\n          page = _a === void 0 ? 0 : _a,\n          _b = pagination.limit,\n          limit = _b === void 0 ? 0 : _b;\n      var start = Math.max(0, page * limit) || 0;\n      var end = limit > 0 ? start + limit : records.length;\n      return records.slice(start, end);\n    }\n\n    return records;\n  };\n\n  IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!pagination) return [3\n            /*break*/\n            , 7];\n            _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n            initialRecord = Math.max(0, page * limit) || 0;\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName).objectStore(storeName).openCursor()];\n\n          case 1:\n            cursor = _c.sent();\n            if (!(cursor && initialRecord > 0)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , cursor.advance(initialRecord)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            pageResults = [];\n            hasLimit = typeof limit === 'number' && limit > 0;\n            _c.label = 4;\n\n          case 4:\n            if (!(cursor && cursor.value)) return [3\n            /*break*/\n            , 6];\n            pageResults.push(cursor.value);\n\n            if (hasLimit && pageResults.length === limit) {\n              return [3\n              /*break*/\n              , 6];\n            }\n\n            return [4\n            /*yield*/\n            , cursor.continue()];\n\n          case 5:\n            cursor = _c.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 6:\n            result = pageResults;\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            return [4\n            /*yield*/\n            , this.db.getAll(storeName)];\n\n          case 8:\n            result = _c.sent();\n            _c.label = 9;\n\n          case 9:\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, cursor, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4\n            /*yield*/\n            , this.db.transaction([storeName], 'readonly').objectStore(storeName).openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n\n          case 2:\n            cursor = _a.sent();\n            result = cursor ? cursor.value : undefined;\n            return [2\n            /*return*/\n            , result && this.modelInstanceCreator(modelConstructor, result)];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.delete = function (modelOrModelConstructor, condition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteQueue, modelConstructor, nameSpace, storeName, models, relations, deletedModels, deletedModels, model, modelConstructor, nameSpace, storeName, tx, store, fromDB, msg, predicates, predicateObjs, type, isValid, msg, relations, relations, deletedModels;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            deleteQueue = [];\n            if (!isModelConstructor(modelOrModelConstructor)) return [3\n            /*break*/\n            , 9];\n            modelConstructor = modelOrModelConstructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4\n            /*yield*/\n            , this.query(modelConstructor, condition)];\n\n          case 2:\n            models = _a.sent();\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            if (!(condition !== undefined)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 3:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 4:\n            _a.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [models, deletedModels]];\n\n          case 5:\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 6:\n            _a.sent(); // Delete all\n\n\n            return [4\n            /*yield*/\n            , this.db.transaction([storeName], 'readwrite').objectStore(storeName).clear()];\n\n          case 7:\n            // Delete all\n            _a.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [models, deletedModels]];\n\n          case 8:\n            return [3\n            /*break*/\n            , 17];\n\n          case 9:\n            model = modelOrModelConstructor;\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            if (!condition) return [3\n            /*break*/\n            , 13];\n            tx = this.db.transaction([storeName], 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4\n            /*yield*/\n            , this._get(store, model.id)];\n\n          case 10:\n            fromDB = _a.sent();\n\n            if (fromDB === undefined) {\n              msg = 'Model instance not found in storage';\n              logger.warn(msg, {\n                model: model\n              });\n              return [2\n              /*return*/\n              , [[model], []]];\n            }\n\n            predicates = ModelPredicateCreator.getPredicates(condition);\n            predicateObjs = predicates.predicates, type = predicates.type;\n            isValid = validatePredicate(fromDB, type, predicateObjs);\n\n            if (!isValid) {\n              msg = 'Conditional update failed';\n              logger.error(msg, {\n                model: fromDB,\n                condition: predicateObjs\n              });\n              throw new Error(msg);\n            }\n\n            return [4\n            /*yield*/\n            , tx.done];\n\n          case 11:\n            _a.sent();\n\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 12:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 15];\n\n          case 13:\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 14:\n            _a.sent();\n\n            _a.label = 15;\n\n          case 15:\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 16:\n            _a.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [[model], deletedModels]];\n\n          case 17:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n    var deleteQueue_1, deleteQueue_1_1;\n\n    var e_6, _a, e_7, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var connectionStoreNames, tx, deleteItem, storeName, items, store, items_1, items_1_1, item, key, e_7_1, e_6_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            connectionStoreNames = deleteQueue.map(function (_a) {\n              var storeName = _a.storeName;\n              return storeName;\n            });\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 22, 23, 28]);\n\n            deleteQueue_1 = __asyncValues(deleteQueue);\n            _c.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , deleteQueue_1.next()];\n\n          case 3:\n            if (!(deleteQueue_1_1 = _c.sent(), !deleteQueue_1_1.done)) return [3\n            /*break*/\n            , 21];\n            deleteItem = deleteQueue_1_1.value;\n            storeName = deleteItem.storeName, items = deleteItem.items;\n            store = tx.objectStore(storeName);\n            _c.label = 4;\n\n          case 4:\n            _c.trys.push([4, 14, 15, 20]);\n\n            items_1 = __asyncValues(items);\n            _c.label = 5;\n\n          case 5:\n            return [4\n            /*yield*/\n            , items_1.next()];\n\n          case 6:\n            if (!(items_1_1 = _c.sent(), !items_1_1.done)) return [3\n            /*break*/\n            , 13];\n            item = items_1_1.value;\n            if (!item) return [3\n            /*break*/\n            , 12];\n            key = void 0;\n            if (!(typeof item === 'object')) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , store.index('byId').getKey(item['id'])];\n\n          case 7:\n            key = _c.sent();\n            return [3\n            /*break*/\n            , 10];\n\n          case 8:\n            return [4\n            /*yield*/\n            , store.index('byId').getKey(item.toString())];\n\n          case 9:\n            key = _c.sent();\n            _c.label = 10;\n\n          case 10:\n            if (!(key !== undefined)) return [3\n            /*break*/\n            , 12];\n            return [4\n            /*yield*/\n            , store.delete(key)];\n\n          case 11:\n            _c.sent();\n\n            _c.label = 12;\n\n          case 12:\n            return [3\n            /*break*/\n            , 5];\n\n          case 13:\n            return [3\n            /*break*/\n            , 20];\n\n          case 14:\n            e_7_1 = _c.sent();\n            e_7 = {\n              error: e_7_1\n            };\n            return [3\n            /*break*/\n            , 20];\n\n          case 15:\n            _c.trys.push([15,, 18, 19]);\n\n            if (!(items_1_1 && !items_1_1.done && (_b = items_1.return))) return [3\n            /*break*/\n            , 17];\n            return [4\n            /*yield*/\n            , _b.call(items_1)];\n\n          case 16:\n            _c.sent();\n\n            _c.label = 17;\n\n          case 17:\n            return [3\n            /*break*/\n            , 19];\n\n          case 18:\n            if (e_7) throw e_7.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 19:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 20:\n            return [3\n            /*break*/\n            , 2];\n\n          case 21:\n            return [3\n            /*break*/\n            , 28];\n\n          case 22:\n            e_6_1 = _c.sent();\n            e_6 = {\n              error: e_6_1\n            };\n            return [3\n            /*break*/\n            , 28];\n\n          case 23:\n            _c.trys.push([23,, 26, 27]);\n\n            if (!(deleteQueue_1_1 && !deleteQueue_1_1.done && (_a = deleteQueue_1.return))) return [3\n            /*break*/\n            , 25];\n            return [4\n            /*yield*/\n            , _a.call(deleteQueue_1)];\n\n          case 24:\n            _c.sent();\n\n            _c.label = 25;\n\n          case 25:\n            return [3\n            /*break*/\n            , 27];\n\n          case 26:\n            if (e_6) throw e_6.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 27:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 28:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteTraverse = function (relations, models, srcModel, nameSpace, deleteQueue) {\n    var relations_2, relations_2_1, models_1, models_1_1, models_2, models_2_1;\n\n    var e_8, _a, e_9, _b, e_10, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var rel, relationType, fieldName, modelName, targetName, storeName, index, _d, model, hasOneIndex, hasOneCustomField, value, recordToDelete, e_9_1, model, childrenArray, e_10_1, e_8_1;\n\n      var _this = this;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 35, 36, 41]);\n\n            relations_2 = __asyncValues(relations);\n            _e.label = 1;\n\n          case 1:\n            return [4\n            /*yield*/\n            , relations_2.next()];\n\n          case 2:\n            if (!(relations_2_1 = _e.sent(), !relations_2_1.done)) return [3\n            /*break*/\n            , 34];\n            rel = relations_2_1.value;\n            relationType = rel.relationType, fieldName = rel.fieldName, modelName = rel.modelName, targetName = rel.targetName;\n            storeName = this.getStorename(nameSpace, modelName);\n            index = getIndex(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, srcModel) || // if we were unable to find an index via relationTypes\n            // i.e. for keyName connections, attempt to find one by the\n            // associatedWith property\n            getIndexFromAssociation(this.schema.namespaces[nameSpace].relationships[modelName].indexes, rel.associatedWith);\n            _d = relationType;\n\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'HAS_MANY':\n                return [3\n                /*break*/\n                , 17];\n\n              case 'BELONGS_TO':\n                return [3\n                /*break*/\n                , 31];\n            }\n\n            return [3\n            /*break*/\n            , 32];\n\n          case 3:\n            _e.trys.push([3, 10, 11, 16]);\n\n            models_1 = __asyncValues(models);\n            _e.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , models_1.next()];\n\n          case 5:\n            if (!(models_1_1 = _e.sent(), !models_1_1.done)) return [3\n            /*break*/\n            , 9];\n            model = models_1_1.value;\n            hasOneIndex = index || 'byId';\n            hasOneCustomField = targetName in model;\n            value = hasOneCustomField ? model[targetName] : model.id;\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(hasOneIndex).get(value)];\n\n          case 6:\n            recordToDelete = _e.sent();\n            return [4\n            /*yield*/\n            , this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, recordToDelete ? [recordToDelete] : [], modelName, nameSpace, deleteQueue)];\n\n          case 7:\n            _e.sent();\n\n            _e.label = 8;\n\n          case 8:\n            return [3\n            /*break*/\n            , 4];\n\n          case 9:\n            return [3\n            /*break*/\n            , 16];\n\n          case 10:\n            e_9_1 = _e.sent();\n            e_9 = {\n              error: e_9_1\n            };\n            return [3\n            /*break*/\n            , 16];\n\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n\n            if (!(models_1_1 && !models_1_1.done && (_b = models_1.return))) return [3\n            /*break*/\n            , 13];\n            return [4\n            /*yield*/\n            , _b.call(models_1)];\n\n          case 12:\n            _e.sent();\n\n            _e.label = 13;\n\n          case 13:\n            return [3\n            /*break*/\n            , 15];\n\n          case 14:\n            if (e_9) throw e_9.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 15:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [3\n            /*break*/\n            , 33];\n\n          case 17:\n            _e.trys.push([17, 24, 25, 30]);\n\n            models_2 = __asyncValues(models);\n            _e.label = 18;\n\n          case 18:\n            return [4\n            /*yield*/\n            , models_2.next()];\n\n          case 19:\n            if (!(models_2_1 = _e.sent(), !models_2_1.done)) return [3\n            /*break*/\n            , 23];\n            model = models_2_1.value;\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(index).getAll(model['id'])];\n\n          case 20:\n            childrenArray = _e.sent();\n            return [4\n            /*yield*/\n            , this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, childrenArray, modelName, nameSpace, deleteQueue)];\n\n          case 21:\n            _e.sent();\n\n            _e.label = 22;\n\n          case 22:\n            return [3\n            /*break*/\n            , 18];\n\n          case 23:\n            return [3\n            /*break*/\n            , 30];\n\n          case 24:\n            e_10_1 = _e.sent();\n            e_10 = {\n              error: e_10_1\n            };\n            return [3\n            /*break*/\n            , 30];\n\n          case 25:\n            _e.trys.push([25,, 28, 29]);\n\n            if (!(models_2_1 && !models_2_1.done && (_c = models_2.return))) return [3\n            /*break*/\n            , 27];\n            return [4\n            /*yield*/\n            , _c.call(models_2)];\n\n          case 26:\n            _e.sent();\n\n            _e.label = 27;\n\n          case 27:\n            return [3\n            /*break*/\n            , 29];\n\n          case 28:\n            if (e_10) throw e_10.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 29:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 30:\n            return [3\n            /*break*/\n            , 33];\n\n          case 31:\n            // Intentionally blank\n            return [3\n            /*break*/\n            , 33];\n\n          case 32:\n            exhaustiveCheck(relationType);\n            return [3\n            /*break*/\n            , 33];\n\n          case 33:\n            return [3\n            /*break*/\n            , 1];\n\n          case 34:\n            return [3\n            /*break*/\n            , 41];\n\n          case 35:\n            e_8_1 = _e.sent();\n            e_8 = {\n              error: e_8_1\n            };\n            return [3\n            /*break*/\n            , 41];\n\n          case 36:\n            _e.trys.push([36,, 39, 40]);\n\n            if (!(relations_2_1 && !relations_2_1.done && (_a = relations_2.return))) return [3\n            /*break*/\n            , 38];\n            return [4\n            /*yield*/\n            , _a.call(relations_2)];\n\n          case 37:\n            _e.sent();\n\n            _e.label = 38;\n\n          case 38:\n            return [3\n            /*break*/\n            , 40];\n\n          case 39:\n            if (e_8) throw e_8.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 40:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 41:\n            deleteQueue.push({\n              storeName: this.getStorename(nameSpace, srcModel),\n              items: models.map(function (record) {\n                return _this.modelInstanceCreator(_this.getModelConstructorByModelName(nameSpace, srcModel), record);\n              })\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            this.db.close();\n            return [4\n            /*yield*/\n            , idb.deleteDB(this.dbName)];\n\n          case 2:\n            _a.sent();\n\n            this.db = undefined;\n            this.initPromise = undefined;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, storeName, txn, store, _loop_1, this_1, items_2, items_2_1, item, e_11_1;\n\n      var e_11, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            result = [];\n            storeName = this.getStorenameForModel(modelConstructor);\n            txn = this.db.transaction(storeName, 'readwrite');\n            store = txn.store;\n\n            _loop_1 = function (item) {\n              var connectedModels, id, _deleted, index, key, instance;\n\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    connectedModels = traverseModel(modelConstructor.name, this_1.modelInstanceCreator(modelConstructor, item), this_1.schema.namespaces[this_1.namespaceResolver(modelConstructor)], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                    id = item.id, _deleted = item._deleted;\n                    index = store.index('byId');\n                    return [4\n                    /*yield*/\n                    , index.getKey(id)];\n\n                  case 1:\n                    key = _a.sent();\n                    if (!!_deleted) return [3\n                    /*break*/\n                    , 3];\n                    instance = connectedModels.find(function (_a) {\n                      var instance = _a.instance;\n                      return instance.id === id;\n                    }).instance;\n                    result.push([instance, key ? OpType.UPDATE : OpType.INSERT]);\n                    return [4\n                    /*yield*/\n                    , store.put(instance, key)];\n\n                  case 2:\n                    _a.sent();\n\n                    return [3\n                    /*break*/\n                    , 5];\n\n                  case 3:\n                    result.push([item, OpType.DELETE]);\n                    if (!key) return [3\n                    /*break*/\n                    , 5];\n                    return [4\n                    /*yield*/\n                    , store.delete(key)];\n\n                  case 4:\n                    _a.sent();\n\n                    _a.label = 5;\n\n                  case 5:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 7, 8, 9]);\n\n            items_2 = __values(items), items_2_1 = items_2.next();\n            _b.label = 3;\n\n          case 3:\n            if (!!items_2_1.done) return [3\n            /*break*/\n            , 6];\n            item = items_2_1.value;\n            return [5\n            /*yield**/\n            , _loop_1(item)];\n\n          case 4:\n            _b.sent();\n\n            _b.label = 5;\n\n          case 5:\n            items_2_1 = items_2.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 6:\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            e_11_1 = _b.sent();\n            e_11 = {\n              error: e_11_1\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            try {\n              if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n            } finally {\n              if (e_11) throw e_11.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [4\n            /*yield*/\n            , txn.done];\n\n          case 10:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  return IndexedDBAdapter;\n}();\n\nexport default new IndexedDBAdapter();","map":{"version":3,"sources":["C:/Users/eriki/Documents/GitHub/amplify-app/node_modules/@aws-amplify/datastore/lib-esm/storage/adapter/IndexedDBAdapter.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__asyncValues","o","asyncIterator","m","i","__values","settle","d","s","__read","r","ar","error","__spread","arguments","concat","ConsoleLogger","Logger","idb","ModelPredicateCreator","ModelSortPredicateCreator","isPredicateObj","OpType","QueryOne","exhaustiveCheck","getIndex","getIndexFromAssociation","isModelConstructor","isPrivateMode","traverseModel","validatePredicate","sortCompareFunction","logger","DB_NAME","IndexedDBAdapter","dbName","prototype","checkPrivate","isPrivate","_a","getStorenameForModel","modelConstructor","namespace","namespaceResolver","modelName","name","getStorename","storeName","setUp","theSchema","modelInstanceCreator","getModelConstructorByModelName","sessionId","VERSION","error_1","_this","_b","initPromise","res","rej","schema","db","openDB","upgrade","oldVersion","newVersion","txn","origStore","tmpName","newStore","cursor","count","e_1_1","error_2","e_1","_c","_d","Object","keys","namespaces","forEach","namespaceName","models","store","createObjectStore","autoIncrement","indexes","relationships","index","createIndex","unique","objectStoreNames","objectStore","keyPath","undefined","openCursor","put","continue","deleteObjectStore","debug","return","abort","_get","storeOrStoreName","id","transaction","get","save","model","condition","e_2","connectedModels","set","connectionStoreNames","tx","fromDB","predicates","predicateObjs","type","isValid","msg","connectionStoreNames_1","connectionStoreNames_1_1","resItem","storeName_1","item","instance","store_1","fromDB_1","opType","key","e_2_1","getPrototypeOf","constructor","Set","values","map","add","Array","from","getPredicates","Error","INSERT","UPDATE","getKey","load","srcModelName","records","records_1","records_1_1","records_2","records_2_1","e_3","e_4","e_5","relations","relations_1","relations_1_1","relation","fieldName","targetName","modelConstructor_1","recordItem","connectionRecord","e_4_1","e_5_1","e_3_1","_e","relationTypes","record","relationType","query","predicate","pagination","queryById","hasSort","hasPagination","idFromPredicate","sort","limit","filtered","all","getById","filterOnPredicate","inMemoryPagination","getAll","enginePagination","idPredicate","find","p","field","operator","operand","filter","sortPredicates","compareFn","page","start","Math","max","end","slice","initialRecord","pageResults","hasLimit","advance","queryOne","firstOrLast","FIRST","delete","modelOrModelConstructor","deleteQueue","nameSpace","deletedModels","deleteTraverse","deleteItem","reduce","acc","items","clear","warn","deleteQueue_1","deleteQueue_1_1","e_6","e_7","items_1","items_1_1","e_7_1","e_6_1","toString","srcModel","relations_2","relations_2_1","models_1","models_1_1","models_2","models_2_1","e_8","e_9","e_10","rel","hasOneIndex","hasOneCustomField","recordToDelete","e_9_1","childrenArray","e_10_1","e_8_1","associatedWith","close","deleteDB","batchSave","_loop_1","this_1","items_2","items_2_1","e_11_1","e_11","_deleted","DELETE"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { ModelPredicateCreator, ModelSortPredicateCreator, } from '../../predicates';\nimport { isPredicateObj, OpType, QueryOne, } from '../../types';\nimport { exhaustiveCheck, getIndex, getIndexFromAssociation, isModelConstructor, isPrivateMode, traverseModel, validatePredicate, sortCompareFunction, } from '../../util';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\nvar IndexedDBAdapter = /** @class */ (function () {\n    function IndexedDBAdapter() {\n        this.dbName = DB_NAME;\n    }\n    IndexedDBAdapter.prototype.checkPrivate = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var isPrivate;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, isPrivateMode().then(function (isPrivate) {\n                            return isPrivate;\n                        })];\n                    case 1:\n                        isPrivate = _a.sent();\n                        if (isPrivate) {\n                            logger.error(\"IndexedDB not supported in this browser's private mode\");\n                            return [2 /*return*/, Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n                        }\n                        else {\n                            return [2 /*return*/, Promise.resolve()];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.getStorenameForModel = function (modelConstructor) {\n        var namespace = this.namespaceResolver(modelConstructor);\n        var modelName = modelConstructor.name;\n        return this.getStorename(namespace, modelName);\n    };\n    IndexedDBAdapter.prototype.getStorename = function (namespace, modelName) {\n        var storeName = namespace + \"_\" + modelName;\n        return storeName;\n    };\n    IndexedDBAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var VERSION, _a, error_1;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _b.sent();\n                        if (!!this.initPromise) return [3 /*break*/, 2];\n                        this.initPromise = new Promise(function (res, rej) {\n                            _this.resolve = res;\n                            _this.reject = rej;\n                        });\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.initPromise];\n                    case 3:\n                        _b.sent();\n                        _b.label = 4;\n                    case 4:\n                        if (sessionId) {\n                            this.dbName = DB_NAME + \"-\" + sessionId;\n                        }\n                        this.schema = theSchema;\n                        this.namespaceResolver = namespaceResolver;\n                        this.modelInstanceCreator = modelInstanceCreator;\n                        this.getModelConstructorByModelName = getModelConstructorByModelName;\n                        _b.label = 5;\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        if (!!this.db) return [3 /*break*/, 7];\n                        VERSION = 2;\n                        _a = this;\n                        return [4 /*yield*/, idb.openDB(this.dbName, VERSION, {\n                                upgrade: function (db, oldVersion, newVersion, txn) { return __awaiter(_this, void 0, void 0, function () {\n                                    var _a, _b, storeName, origStore, tmpName, newStore, cursor, count, e_1_1, error_2;\n                                    var e_1, _c;\n                                    var _this = this;\n                                    return __generator(this, function (_d) {\n                                        switch (_d.label) {\n                                            case 0:\n                                                if (oldVersion === 0) {\n                                                    Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                                                        var namespace = theSchema.namespaces[namespaceName];\n                                                        Object.keys(namespace.models).forEach(function (modelName) {\n                                                            var storeName = _this.getStorename(namespaceName, modelName);\n                                                            var store = db.createObjectStore(storeName, {\n                                                                autoIncrement: true,\n                                                            });\n                                                            var indexes = _this.schema.namespaces[namespaceName]\n                                                                .relationships[modelName].indexes;\n                                                            indexes.forEach(function (index) { return store.createIndex(index, index); });\n                                                            store.createIndex('byId', 'id', { unique: true });\n                                                        });\n                                                    });\n                                                    return [2 /*return*/];\n                                                }\n                                                if (!(oldVersion === 1 && newVersion === 2)) return [3 /*break*/, 16];\n                                                _d.label = 1;\n                                            case 1:\n                                                _d.trys.push([1, 14, , 15]);\n                                                _d.label = 2;\n                                            case 2:\n                                                _d.trys.push([2, 11, 12, 13]);\n                                                _a = __values(txn.objectStoreNames), _b = _a.next();\n                                                _d.label = 3;\n                                            case 3:\n                                                if (!!_b.done) return [3 /*break*/, 10];\n                                                storeName = _b.value;\n                                                origStore = txn.objectStore(storeName);\n                                                tmpName = \"tmp_\" + storeName;\n                                                origStore.name = tmpName;\n                                                newStore = db.createObjectStore(storeName, {\n                                                    keyPath: undefined,\n                                                    autoIncrement: true,\n                                                });\n                                                newStore.createIndex('byId', 'id', { unique: true });\n                                                return [4 /*yield*/, origStore.openCursor()];\n                                            case 4:\n                                                cursor = _d.sent();\n                                                count = 0;\n                                                _d.label = 5;\n                                            case 5:\n                                                if (!(cursor && cursor.value)) return [3 /*break*/, 8];\n                                                // we don't pass key, since they are all new entries in the new store\n                                                return [4 /*yield*/, newStore.put(cursor.value)];\n                                            case 6:\n                                                // we don't pass key, since they are all new entries in the new store\n                                                _d.sent();\n                                                return [4 /*yield*/, cursor.continue()];\n                                            case 7:\n                                                cursor = _d.sent();\n                                                count++;\n                                                return [3 /*break*/, 5];\n                                            case 8:\n                                                // delete original\n                                                db.deleteObjectStore(tmpName);\n                                                logger.debug(count + \" \" + storeName + \" records migrated\");\n                                                _d.label = 9;\n                                            case 9:\n                                                _b = _a.next();\n                                                return [3 /*break*/, 3];\n                                            case 10: return [3 /*break*/, 13];\n                                            case 11:\n                                                e_1_1 = _d.sent();\n                                                e_1 = { error: e_1_1 };\n                                                return [3 /*break*/, 13];\n                                            case 12:\n                                                try {\n                                                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                                                }\n                                                finally { if (e_1) throw e_1.error; }\n                                                return [7 /*endfinally*/];\n                                            case 13: return [3 /*break*/, 15];\n                                            case 14:\n                                                error_2 = _d.sent();\n                                                logger.error('Error migrating IndexedDB data', error_2);\n                                                txn.abort();\n                                                throw error_2;\n                                            case 15: return [2 /*return*/];\n                                            case 16: return [2 /*return*/];\n                                        }\n                                    });\n                                }); },\n                            })];\n                    case 6:\n                        _a.db = _b.sent();\n                        this.resolve();\n                        _b.label = 7;\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        error_1 = _b.sent();\n                        this.reject(error_1);\n                        return [3 /*break*/, 9];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype._get = function (storeOrStoreName, id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var index, storeName, store, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof storeOrStoreName === 'string') {\n                            storeName = storeOrStoreName;\n                            index = this.db.transaction(storeName, 'readonly').store.index('byId');\n                        }\n                        else {\n                            store = storeOrStoreName;\n                            index = store.index('byId');\n                        }\n                        return [4 /*yield*/, index.get(id)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.save = function (model, condition) {\n        var e_2, _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var modelConstructor, storeName, connectedModels, namespaceName, set, connectionStoreNames, tx, store, fromDB, predicates, predicateObjs, type, isValid, msg, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, store_1, id, fromDB_1, opType, key, e_2_1;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _b.sent();\n                        modelConstructor = Object.getPrototypeOf(model)\n                            .constructor;\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[this.namespaceResolver(modelConstructor)], this.modelInstanceCreator, this.getModelConstructorByModelName);\n                        namespaceName = this.namespaceResolver(modelConstructor);\n                        set = new Set();\n                        connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n                            var modelName = _a.modelName, item = _a.item, instance = _a.instance;\n                            var storeName = _this.getStorename(namespaceName, modelName);\n                            set.add(storeName);\n                            return { storeName: storeName, item: item, instance: instance };\n                        });\n                        tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n                        store = tx.objectStore(storeName);\n                        return [4 /*yield*/, this._get(store, model.id)];\n                    case 2:\n                        fromDB = _b.sent();\n                        if (condition && fromDB) {\n                            predicates = ModelPredicateCreator.getPredicates(condition);\n                            predicateObjs = predicates.predicates, type = predicates.type;\n                            isValid = validatePredicate(fromDB, type, predicateObjs);\n                            if (!isValid) {\n                                msg = 'Conditional update failed';\n                                logger.error(msg, { model: fromDB, condition: predicateObjs });\n                                throw new Error(msg);\n                            }\n                        }\n                        result = [];\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 11, 12, 17]);\n                        connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n                        _b.label = 4;\n                    case 4: return [4 /*yield*/, connectionStoreNames_1.next()];\n                    case 5:\n                        if (!(connectionStoreNames_1_1 = _b.sent(), !connectionStoreNames_1_1.done)) return [3 /*break*/, 10];\n                        resItem = connectionStoreNames_1_1.value;\n                        storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance;\n                        store_1 = tx.objectStore(storeName_1);\n                        id = item.id;\n                        return [4 /*yield*/, this._get(store_1, id)];\n                    case 6:\n                        fromDB_1 = _b.sent();\n                        opType = fromDB_1 === undefined ? OpType.INSERT : OpType.UPDATE;\n                        if (!(id === model.id || opType === OpType.INSERT)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, store_1.index('byId').getKey(item.id)];\n                    case 7:\n                        key = _b.sent();\n                        return [4 /*yield*/, store_1.put(item, key)];\n                    case 8:\n                        _b.sent();\n                        result.push([instance, opType]);\n                        _b.label = 9;\n                    case 9: return [3 /*break*/, 4];\n                    case 10: return [3 /*break*/, 17];\n                    case 11:\n                        e_2_1 = _b.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 17];\n                    case 12:\n                        _b.trys.push([12, , 15, 16]);\n                        if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3 /*break*/, 14];\n                        return [4 /*yield*/, _a.call(connectionStoreNames_1)];\n                    case 13:\n                        _b.sent();\n                        _b.label = 14;\n                    case 14: return [3 /*break*/, 16];\n                    case 15:\n                        if (e_2) throw e_2.error;\n                        return [7 /*endfinally*/];\n                    case 16: return [7 /*endfinally*/];\n                    case 17: return [4 /*yield*/, tx.done];\n                    case 18:\n                        _b.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.load = function (namespaceName, srcModelName, records) {\n        var records_1, records_1_1, records_2, records_2_1;\n        var e_3, _a, e_4, _b, e_5, _c;\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, relations, connectionStoreNames, modelConstructor, tx, relations_1, relations_1_1, relation, fieldName, modelName, targetName, storeName, store, modelConstructor_1, _d, recordItem, connectionRecord, e_4_1, recordItem, connectionRecord, e_5_1, e_3_1;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        namespace = this.schema.namespaces[namespaceName];\n                        relations = namespace.relationships[srcModelName].relationTypes;\n                        connectionStoreNames = relations.map(function (_a) {\n                            var modelName = _a.modelName;\n                            return _this.getStorename(namespaceName, modelName);\n                        });\n                        modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n                        if (connectionStoreNames.length === 0) {\n                            return [2 /*return*/, records.map(function (record) {\n                                    return _this.modelInstanceCreator(modelConstructor, record);\n                                })];\n                        }\n                        tx = this.db.transaction(__spread(connectionStoreNames), 'readonly');\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 34, 35, 40]);\n                        relations_1 = __asyncValues(relations);\n                        _e.label = 2;\n                    case 2: return [4 /*yield*/, relations_1.next()];\n                    case 3:\n                        if (!(relations_1_1 = _e.sent(), !relations_1_1.done)) return [3 /*break*/, 33];\n                        relation = relations_1_1.value;\n                        fieldName = relation.fieldName, modelName = relation.modelName, targetName = relation.targetName;\n                        storeName = this.getStorename(namespaceName, modelName);\n                        store = tx.objectStore(storeName);\n                        modelConstructor_1 = this.getModelConstructorByModelName(namespaceName, modelName);\n                        _d = relation.relationType;\n                        switch (_d) {\n                            case 'HAS_ONE': return [3 /*break*/, 4];\n                            case 'BELONGS_TO': return [3 /*break*/, 17];\n                            case 'HAS_MANY': return [3 /*break*/, 30];\n                        }\n                        return [3 /*break*/, 31];\n                    case 4:\n                        _e.trys.push([4, 10, 11, 16]);\n                        records_1 = __asyncValues(records);\n                        _e.label = 5;\n                    case 5: return [4 /*yield*/, records_1.next()];\n                    case 6:\n                        if (!(records_1_1 = _e.sent(), !records_1_1.done)) return [3 /*break*/, 9];\n                        recordItem = records_1_1.value;\n                        if (!recordItem[fieldName]) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this._get(store, recordItem[fieldName])];\n                    case 7:\n                        connectionRecord = _e.sent();\n                        recordItem[fieldName] =\n                            connectionRecord &&\n                                this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n                        _e.label = 8;\n                    case 8: return [3 /*break*/, 5];\n                    case 9: return [3 /*break*/, 16];\n                    case 10:\n                        e_4_1 = _e.sent();\n                        e_4 = { error: e_4_1 };\n                        return [3 /*break*/, 16];\n                    case 11:\n                        _e.trys.push([11, , 14, 15]);\n                        if (!(records_1_1 && !records_1_1.done && (_b = records_1.return))) return [3 /*break*/, 13];\n                        return [4 /*yield*/, _b.call(records_1)];\n                    case 12:\n                        _e.sent();\n                        _e.label = 13;\n                    case 13: return [3 /*break*/, 15];\n                    case 14:\n                        if (e_4) throw e_4.error;\n                        return [7 /*endfinally*/];\n                    case 15: return [7 /*endfinally*/];\n                    case 16: return [3 /*break*/, 32];\n                    case 17:\n                        _e.trys.push([17, 23, 24, 29]);\n                        records_2 = __asyncValues(records);\n                        _e.label = 18;\n                    case 18: return [4 /*yield*/, records_2.next()];\n                    case 19:\n                        if (!(records_2_1 = _e.sent(), !records_2_1.done)) return [3 /*break*/, 22];\n                        recordItem = records_2_1.value;\n                        if (!recordItem[targetName]) return [3 /*break*/, 21];\n                        return [4 /*yield*/, this._get(store, recordItem[targetName])];\n                    case 20:\n                        connectionRecord = _e.sent();\n                        recordItem[fieldName] =\n                            connectionRecord &&\n                                this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n                        delete recordItem[targetName];\n                        _e.label = 21;\n                    case 21: return [3 /*break*/, 18];\n                    case 22: return [3 /*break*/, 29];\n                    case 23:\n                        e_5_1 = _e.sent();\n                        e_5 = { error: e_5_1 };\n                        return [3 /*break*/, 29];\n                    case 24:\n                        _e.trys.push([24, , 27, 28]);\n                        if (!(records_2_1 && !records_2_1.done && (_c = records_2.return))) return [3 /*break*/, 26];\n                        return [4 /*yield*/, _c.call(records_2)];\n                    case 25:\n                        _e.sent();\n                        _e.label = 26;\n                    case 26: return [3 /*break*/, 28];\n                    case 27:\n                        if (e_5) throw e_5.error;\n                        return [7 /*endfinally*/];\n                    case 28: return [7 /*endfinally*/];\n                    case 29: return [3 /*break*/, 32];\n                    case 30: \n                    // TODO: Lazy loading\n                    return [3 /*break*/, 32];\n                    case 31:\n                        exhaustiveCheck(relation.relationType);\n                        return [3 /*break*/, 32];\n                    case 32: return [3 /*break*/, 2];\n                    case 33: return [3 /*break*/, 40];\n                    case 34:\n                        e_3_1 = _e.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 40];\n                    case 35:\n                        _e.trys.push([35, , 38, 39]);\n                        if (!(relations_1_1 && !relations_1_1.done && (_a = relations_1.return))) return [3 /*break*/, 37];\n                        return [4 /*yield*/, _a.call(relations_1)];\n                    case 36:\n                        _e.sent();\n                        _e.label = 37;\n                    case 37: return [3 /*break*/, 39];\n                    case 38:\n                        if (e_3) throw e_3.error;\n                        return [7 /*endfinally*/];\n                    case 39: return [7 /*endfinally*/];\n                    case 40: return [2 /*return*/, records.map(function (record) {\n                            return _this.modelInstanceCreator(modelConstructor, record);\n                        })];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            var storeName, namespaceName, predicates, queryById, hasSort, hasPagination, records;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        namespaceName = this.namespaceResolver(modelConstructor);\n                        predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n                        queryById = predicates && this.idFromPredicate(predicates);\n                        hasSort = pagination && pagination.sort;\n                        hasPagination = pagination && pagination.limit;\n                        return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\n                                var record, filtered, all;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!queryById) return [3 /*break*/, 2];\n                                            return [4 /*yield*/, this.getById(storeName, queryById)];\n                                        case 1:\n                                            record = _a.sent();\n                                            return [2 /*return*/, record ? [record] : []];\n                                        case 2:\n                                            if (!predicates) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this.filterOnPredicate(storeName, predicates)];\n                                        case 3:\n                                            filtered = _a.sent();\n                                            return [2 /*return*/, this.inMemoryPagination(filtered, pagination)];\n                                        case 4:\n                                            if (!hasSort) return [3 /*break*/, 6];\n                                            return [4 /*yield*/, this.getAll(storeName)];\n                                        case 5:\n                                            all = _a.sent();\n                                            return [2 /*return*/, this.inMemoryPagination(all, pagination)];\n                                        case 6:\n                                            if (hasPagination) {\n                                                return [2 /*return*/, this.enginePagination(storeName, pagination)];\n                                            }\n                                            return [2 /*return*/, this.getAll(storeName)];\n                                    }\n                                });\n                            }); })()];\n                    case 2:\n                        records = _a.sent();\n                        return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, records)];\n                    case 3: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.getById = function (storeName, id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var record;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._get(storeName, id)];\n                    case 1:\n                        record = _a.sent();\n                        return [2 /*return*/, record];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.getAll = function (storeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.db.getAll(storeName)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.idFromPredicate = function (predicates) {\n        var predicateObjs = predicates.predicates;\n        var idPredicate = predicateObjs.length === 1 &&\n            predicateObjs.find(function (p) { return isPredicateObj(p) && p.field === 'id' && p.operator === 'eq'; });\n        return idPredicate && idPredicate.operand;\n    };\n    IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n        return __awaiter(this, void 0, void 0, function () {\n            var predicateObjs, type, all, filtered;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        predicateObjs = predicates.predicates, type = predicates.type;\n                        return [4 /*yield*/, this.getAll(storeName)];\n                    case 1:\n                        all = _a.sent();\n                        filtered = predicateObjs\n                            ? all.filter(function (m) { return validatePredicate(m, type, predicateObjs); })\n                            : all;\n                        return [2 /*return*/, filtered];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n        if (pagination && records.length > 1) {\n            if (pagination.sort) {\n                var sortPredicates = ModelSortPredicateCreator.getPredicates(pagination.sort);\n                if (sortPredicates.length) {\n                    var compareFn = sortCompareFunction(sortPredicates);\n                    records.sort(compareFn);\n                }\n            }\n            var _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n            var start = Math.max(0, page * limit) || 0;\n            var end = limit > 0 ? start + limit : records.length;\n            return records.slice(start, end);\n        }\n        return records;\n    };\n    IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!pagination) return [3 /*break*/, 7];\n                        _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n                        initialRecord = Math.max(0, page * limit) || 0;\n                        return [4 /*yield*/, this.db\n                                .transaction(storeName)\n                                .objectStore(storeName)\n                                .openCursor()];\n                    case 1:\n                        cursor = _c.sent();\n                        if (!(cursor && initialRecord > 0)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, cursor.advance(initialRecord)];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        pageResults = [];\n                        hasLimit = typeof limit === 'number' && limit > 0;\n                        _c.label = 4;\n                    case 4:\n                        if (!(cursor && cursor.value)) return [3 /*break*/, 6];\n                        pageResults.push(cursor.value);\n                        if (hasLimit && pageResults.length === limit) {\n                            return [3 /*break*/, 6];\n                        }\n                        return [4 /*yield*/, cursor.continue()];\n                    case 5:\n                        cursor = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 6:\n                        result = pageResults;\n                        return [3 /*break*/, 9];\n                    case 7: return [4 /*yield*/, this.db.getAll(storeName)];\n                    case 8:\n                        result = (_c.sent());\n                        _c.label = 9;\n                    case 9: return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n        if (firstOrLast === void 0) { firstOrLast = QueryOne.FIRST; }\n        return __awaiter(this, void 0, void 0, function () {\n            var storeName, cursor, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        return [4 /*yield*/, this.db\n                                .transaction([storeName], 'readonly')\n                                .objectStore(storeName)\n                                .openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n                    case 2:\n                        cursor = _a.sent();\n                        result = cursor ? cursor.value : undefined;\n                        return [2 /*return*/, result && this.modelInstanceCreator(modelConstructor, result)];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.delete = function (modelOrModelConstructor, condition) {\n        return __awaiter(this, void 0, void 0, function () {\n            var deleteQueue, modelConstructor, nameSpace, storeName, models, relations, deletedModels, deletedModels, model, modelConstructor, nameSpace, storeName, tx, store, fromDB, msg, predicates, predicateObjs, type, isValid, msg, relations, relations, deletedModels;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        deleteQueue = [];\n                        if (!isModelConstructor(modelOrModelConstructor)) return [3 /*break*/, 9];\n                        modelConstructor = modelOrModelConstructor;\n                        nameSpace = this.namespaceResolver(modelConstructor);\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        return [4 /*yield*/, this.query(modelConstructor, condition)];\n                    case 2:\n                        models = _a.sent();\n                        relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n                        if (!(condition !== undefined)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.deleteItem(deleteQueue)];\n                    case 4:\n                        _a.sent();\n                        deletedModels = deleteQueue.reduce(function (acc, _a) {\n                            var items = _a.items;\n                            return acc.concat(items);\n                        }, []);\n                        return [2 /*return*/, [models, deletedModels]];\n                    case 5: return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n                    case 6:\n                        _a.sent();\n                        // Delete all\n                        return [4 /*yield*/, this.db\n                                .transaction([storeName], 'readwrite')\n                                .objectStore(storeName)\n                                .clear()];\n                    case 7:\n                        // Delete all\n                        _a.sent();\n                        deletedModels = deleteQueue.reduce(function (acc, _a) {\n                            var items = _a.items;\n                            return acc.concat(items);\n                        }, []);\n                        return [2 /*return*/, [models, deletedModels]];\n                    case 8: return [3 /*break*/, 17];\n                    case 9:\n                        model = modelOrModelConstructor;\n                        modelConstructor = Object.getPrototypeOf(model)\n                            .constructor;\n                        nameSpace = this.namespaceResolver(modelConstructor);\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        if (!condition) return [3 /*break*/, 13];\n                        tx = this.db.transaction([storeName], 'readwrite');\n                        store = tx.objectStore(storeName);\n                        return [4 /*yield*/, this._get(store, model.id)];\n                    case 10:\n                        fromDB = _a.sent();\n                        if (fromDB === undefined) {\n                            msg = 'Model instance not found in storage';\n                            logger.warn(msg, { model: model });\n                            return [2 /*return*/, [[model], []]];\n                        }\n                        predicates = ModelPredicateCreator.getPredicates(condition);\n                        predicateObjs = predicates.predicates, type = predicates.type;\n                        isValid = validatePredicate(fromDB, type, predicateObjs);\n                        if (!isValid) {\n                            msg = 'Conditional update failed';\n                            logger.error(msg, { model: fromDB, condition: predicateObjs });\n                            throw new Error(msg);\n                        }\n                        return [4 /*yield*/, tx.done];\n                    case 11:\n                        _a.sent();\n                        relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n                        return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n                    case 12:\n                        _a.sent();\n                        return [3 /*break*/, 15];\n                    case 13:\n                        relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n                        return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n                    case 14:\n                        _a.sent();\n                        _a.label = 15;\n                    case 15: return [4 /*yield*/, this.deleteItem(deleteQueue)];\n                    case 16:\n                        _a.sent();\n                        deletedModels = deleteQueue.reduce(function (acc, _a) {\n                            var items = _a.items;\n                            return acc.concat(items);\n                        }, []);\n                        return [2 /*return*/, [[model], deletedModels]];\n                    case 17: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n        var deleteQueue_1, deleteQueue_1_1;\n        var e_6, _a, e_7, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var connectionStoreNames, tx, deleteItem, storeName, items, store, items_1, items_1_1, item, key, e_7_1, e_6_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        connectionStoreNames = deleteQueue.map(function (_a) {\n                            var storeName = _a.storeName;\n                            return storeName;\n                        });\n                        tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 22, 23, 28]);\n                        deleteQueue_1 = __asyncValues(deleteQueue);\n                        _c.label = 2;\n                    case 2: return [4 /*yield*/, deleteQueue_1.next()];\n                    case 3:\n                        if (!(deleteQueue_1_1 = _c.sent(), !deleteQueue_1_1.done)) return [3 /*break*/, 21];\n                        deleteItem = deleteQueue_1_1.value;\n                        storeName = deleteItem.storeName, items = deleteItem.items;\n                        store = tx.objectStore(storeName);\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 14, 15, 20]);\n                        items_1 = __asyncValues(items);\n                        _c.label = 5;\n                    case 5: return [4 /*yield*/, items_1.next()];\n                    case 6:\n                        if (!(items_1_1 = _c.sent(), !items_1_1.done)) return [3 /*break*/, 13];\n                        item = items_1_1.value;\n                        if (!item) return [3 /*break*/, 12];\n                        key = void 0;\n                        if (!(typeof item === 'object')) return [3 /*break*/, 8];\n                        return [4 /*yield*/, store.index('byId').getKey(item['id'])];\n                    case 7:\n                        key = _c.sent();\n                        return [3 /*break*/, 10];\n                    case 8: return [4 /*yield*/, store.index('byId').getKey(item.toString())];\n                    case 9:\n                        key = _c.sent();\n                        _c.label = 10;\n                    case 10:\n                        if (!(key !== undefined)) return [3 /*break*/, 12];\n                        return [4 /*yield*/, store.delete(key)];\n                    case 11:\n                        _c.sent();\n                        _c.label = 12;\n                    case 12: return [3 /*break*/, 5];\n                    case 13: return [3 /*break*/, 20];\n                    case 14:\n                        e_7_1 = _c.sent();\n                        e_7 = { error: e_7_1 };\n                        return [3 /*break*/, 20];\n                    case 15:\n                        _c.trys.push([15, , 18, 19]);\n                        if (!(items_1_1 && !items_1_1.done && (_b = items_1.return))) return [3 /*break*/, 17];\n                        return [4 /*yield*/, _b.call(items_1)];\n                    case 16:\n                        _c.sent();\n                        _c.label = 17;\n                    case 17: return [3 /*break*/, 19];\n                    case 18:\n                        if (e_7) throw e_7.error;\n                        return [7 /*endfinally*/];\n                    case 19: return [7 /*endfinally*/];\n                    case 20: return [3 /*break*/, 2];\n                    case 21: return [3 /*break*/, 28];\n                    case 22:\n                        e_6_1 = _c.sent();\n                        e_6 = { error: e_6_1 };\n                        return [3 /*break*/, 28];\n                    case 23:\n                        _c.trys.push([23, , 26, 27]);\n                        if (!(deleteQueue_1_1 && !deleteQueue_1_1.done && (_a = deleteQueue_1.return))) return [3 /*break*/, 25];\n                        return [4 /*yield*/, _a.call(deleteQueue_1)];\n                    case 24:\n                        _c.sent();\n                        _c.label = 25;\n                    case 25: return [3 /*break*/, 27];\n                    case 26:\n                        if (e_6) throw e_6.error;\n                        return [7 /*endfinally*/];\n                    case 27: return [7 /*endfinally*/];\n                    case 28: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.deleteTraverse = function (relations, models, srcModel, nameSpace, deleteQueue) {\n        var relations_2, relations_2_1, models_1, models_1_1, models_2, models_2_1;\n        var e_8, _a, e_9, _b, e_10, _c;\n        return __awaiter(this, void 0, void 0, function () {\n            var rel, relationType, fieldName, modelName, targetName, storeName, index, _d, model, hasOneIndex, hasOneCustomField, value, recordToDelete, e_9_1, model, childrenArray, e_10_1, e_8_1;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 35, 36, 41]);\n                        relations_2 = __asyncValues(relations);\n                        _e.label = 1;\n                    case 1: return [4 /*yield*/, relations_2.next()];\n                    case 2:\n                        if (!(relations_2_1 = _e.sent(), !relations_2_1.done)) return [3 /*break*/, 34];\n                        rel = relations_2_1.value;\n                        relationType = rel.relationType, fieldName = rel.fieldName, modelName = rel.modelName, targetName = rel.targetName;\n                        storeName = this.getStorename(nameSpace, modelName);\n                        index = getIndex(this.schema.namespaces[nameSpace].relationships[modelName]\n                            .relationTypes, srcModel) ||\n                            // if we were unable to find an index via relationTypes\n                            // i.e. for keyName connections, attempt to find one by the\n                            // associatedWith property\n                            getIndexFromAssociation(this.schema.namespaces[nameSpace].relationships[modelName].indexes, rel.associatedWith);\n                        _d = relationType;\n                        switch (_d) {\n                            case 'HAS_ONE': return [3 /*break*/, 3];\n                            case 'HAS_MANY': return [3 /*break*/, 17];\n                            case 'BELONGS_TO': return [3 /*break*/, 31];\n                        }\n                        return [3 /*break*/, 32];\n                    case 3:\n                        _e.trys.push([3, 10, 11, 16]);\n                        models_1 = __asyncValues(models);\n                        _e.label = 4;\n                    case 4: return [4 /*yield*/, models_1.next()];\n                    case 5:\n                        if (!(models_1_1 = _e.sent(), !models_1_1.done)) return [3 /*break*/, 9];\n                        model = models_1_1.value;\n                        hasOneIndex = index || 'byId';\n                        hasOneCustomField = targetName in model;\n                        value = hasOneCustomField ? model[targetName] : model.id;\n                        return [4 /*yield*/, this.db\n                                .transaction(storeName, 'readwrite')\n                                .objectStore(storeName)\n                                .index(hasOneIndex)\n                                .get(value)];\n                    case 6:\n                        recordToDelete = _e.sent();\n                        return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName]\n                                .relationTypes, recordToDelete ? [recordToDelete] : [], modelName, nameSpace, deleteQueue)];\n                    case 7:\n                        _e.sent();\n                        _e.label = 8;\n                    case 8: return [3 /*break*/, 4];\n                    case 9: return [3 /*break*/, 16];\n                    case 10:\n                        e_9_1 = _e.sent();\n                        e_9 = { error: e_9_1 };\n                        return [3 /*break*/, 16];\n                    case 11:\n                        _e.trys.push([11, , 14, 15]);\n                        if (!(models_1_1 && !models_1_1.done && (_b = models_1.return))) return [3 /*break*/, 13];\n                        return [4 /*yield*/, _b.call(models_1)];\n                    case 12:\n                        _e.sent();\n                        _e.label = 13;\n                    case 13: return [3 /*break*/, 15];\n                    case 14:\n                        if (e_9) throw e_9.error;\n                        return [7 /*endfinally*/];\n                    case 15: return [7 /*endfinally*/];\n                    case 16: return [3 /*break*/, 33];\n                    case 17:\n                        _e.trys.push([17, 24, 25, 30]);\n                        models_2 = __asyncValues(models);\n                        _e.label = 18;\n                    case 18: return [4 /*yield*/, models_2.next()];\n                    case 19:\n                        if (!(models_2_1 = _e.sent(), !models_2_1.done)) return [3 /*break*/, 23];\n                        model = models_2_1.value;\n                        return [4 /*yield*/, this.db\n                                .transaction(storeName, 'readwrite')\n                                .objectStore(storeName)\n                                .index(index)\n                                .getAll(model['id'])];\n                    case 20:\n                        childrenArray = _e.sent();\n                        return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName]\n                                .relationTypes, childrenArray, modelName, nameSpace, deleteQueue)];\n                    case 21:\n                        _e.sent();\n                        _e.label = 22;\n                    case 22: return [3 /*break*/, 18];\n                    case 23: return [3 /*break*/, 30];\n                    case 24:\n                        e_10_1 = _e.sent();\n                        e_10 = { error: e_10_1 };\n                        return [3 /*break*/, 30];\n                    case 25:\n                        _e.trys.push([25, , 28, 29]);\n                        if (!(models_2_1 && !models_2_1.done && (_c = models_2.return))) return [3 /*break*/, 27];\n                        return [4 /*yield*/, _c.call(models_2)];\n                    case 26:\n                        _e.sent();\n                        _e.label = 27;\n                    case 27: return [3 /*break*/, 29];\n                    case 28:\n                        if (e_10) throw e_10.error;\n                        return [7 /*endfinally*/];\n                    case 29: return [7 /*endfinally*/];\n                    case 30: return [3 /*break*/, 33];\n                    case 31: \n                    // Intentionally blank\n                    return [3 /*break*/, 33];\n                    case 32:\n                        exhaustiveCheck(relationType);\n                        return [3 /*break*/, 33];\n                    case 33: return [3 /*break*/, 1];\n                    case 34: return [3 /*break*/, 41];\n                    case 35:\n                        e_8_1 = _e.sent();\n                        e_8 = { error: e_8_1 };\n                        return [3 /*break*/, 41];\n                    case 36:\n                        _e.trys.push([36, , 39, 40]);\n                        if (!(relations_2_1 && !relations_2_1.done && (_a = relations_2.return))) return [3 /*break*/, 38];\n                        return [4 /*yield*/, _a.call(relations_2)];\n                    case 37:\n                        _e.sent();\n                        _e.label = 38;\n                    case 38: return [3 /*break*/, 40];\n                    case 39:\n                        if (e_8) throw e_8.error;\n                        return [7 /*endfinally*/];\n                    case 40: return [7 /*endfinally*/];\n                    case 41:\n                        deleteQueue.push({\n                            storeName: this.getStorename(nameSpace, srcModel),\n                            items: models.map(function (record) {\n                                return _this.modelInstanceCreator(_this.getModelConstructorByModelName(nameSpace, srcModel), record);\n                            }),\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        this.db.close();\n                        return [4 /*yield*/, idb.deleteDB(this.dbName)];\n                    case 2:\n                        _a.sent();\n                        this.db = undefined;\n                        this.initPromise = undefined;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, storeName, txn, store, _loop_1, this_1, items_2, items_2_1, item, e_11_1;\n            var e_11, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (items.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _b.sent();\n                        result = [];\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        txn = this.db.transaction(storeName, 'readwrite');\n                        store = txn.store;\n                        _loop_1 = function (item) {\n                            var connectedModels, id, _deleted, index, key, instance;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        connectedModels = traverseModel(modelConstructor.name, this_1.modelInstanceCreator(modelConstructor, item), this_1.schema.namespaces[this_1.namespaceResolver(modelConstructor)], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                                        id = item.id, _deleted = item._deleted;\n                                        index = store.index('byId');\n                                        return [4 /*yield*/, index.getKey(id)];\n                                    case 1:\n                                        key = _a.sent();\n                                        if (!!_deleted) return [3 /*break*/, 3];\n                                        instance = connectedModels.find(function (_a) {\n                                            var instance = _a.instance;\n                                            return instance.id === id;\n                                        }).instance;\n                                        result.push([\n                                            instance,\n                                            key ? OpType.UPDATE : OpType.INSERT,\n                                        ]);\n                                        return [4 /*yield*/, store.put(instance, key)];\n                                    case 2:\n                                        _a.sent();\n                                        return [3 /*break*/, 5];\n                                    case 3:\n                                        result.push([item, OpType.DELETE]);\n                                        if (!key) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, store.delete(key)];\n                                    case 4:\n                                        _a.sent();\n                                        _a.label = 5;\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 7, 8, 9]);\n                        items_2 = __values(items), items_2_1 = items_2.next();\n                        _b.label = 3;\n                    case 3:\n                        if (!!items_2_1.done) return [3 /*break*/, 6];\n                        item = items_2_1.value;\n                        return [5 /*yield**/, _loop_1(item)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        items_2_1 = items_2.next();\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        e_11_1 = _b.sent();\n                        e_11 = { error: e_11_1 };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        try {\n                            if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n                        }\n                        finally { if (e_11) throw e_11.error; }\n                        return [7 /*endfinally*/];\n                    case 9: return [4 /*yield*/, txn.done];\n                    case 10:\n                        _b.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    return IndexedDBAdapter;\n}());\nexport default new IndexedDBAdapter();\n"]},"metadata":{},"sourceType":"module"}