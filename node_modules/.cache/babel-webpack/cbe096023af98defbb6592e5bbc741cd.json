{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eriki/Documents/GitHub/amplify-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, h, H as Host } from './index-83f2275b.js';\nimport { Logger } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport './constants-c8ecaa24.js';\nimport '@aws-amplify/storage';\nimport { p as putStorageObject, g as getStorageObject } from './storage-helpers-1afafead.js';\nconst amplifyS3ImageCss = \":host{height:inherit;width:inherit;--height:inherit;--width:inherit}img{height:var(--height);width:var(--width)}\";\nconst logger = new Logger('S3Image');\nconst AmplifyS3Image = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** The content type header used when uploading to S3 */\n\n    this.contentType = 'binary/octet-stream';\n    /** The access level of the image */\n\n    this.level = AccessLevel.Public;\n  }\n\n  watchHandler() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.load();\n    })();\n  }\n\n  componentWillLoad() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.load();\n    })();\n  }\n\n  load() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        imgKey,\n        path,\n        body,\n        contentType,\n        level,\n        track,\n        identityId\n      } = _this3;\n\n      if (!imgKey && !path) {\n        logger.debug('empty imgKey and path');\n        return;\n      }\n\n      const key = imgKey || path;\n      logger.debug('loading ' + key + '...');\n\n      try {\n        if (body) {\n          yield putStorageObject(imgKey, body, level, track, contentType, logger);\n        }\n\n        _this3.src = yield getStorageObject(key, level, track, identityId, logger);\n      } catch (err) {\n        logger.debug(err);\n        throw new Error(err);\n      }\n    })();\n  }\n\n  render() {\n    return h(Host, null, this.src && h(\"img\", Object.assign({\n      src: this.src,\n      alt: this.alt,\n      onLoad: this.handleOnLoad,\n      onError: this.handleOnError\n    }, this.imgProps)));\n  }\n\n  static get watchers() {\n    return {\n      \"body\": [\"watchHandler\"]\n    };\n  }\n\n};\nAmplifyS3Image.style = amplifyS3ImageCss;\nexport { AmplifyS3Image as amplify_s3_image };","map":{"version":3,"sources":["C:/Users/eriki/Documents/GitHub/amplify-app/node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-image.entry.js"],"names":["r","registerInstance","h","H","Host","Logger","A","AccessLevel","p","putStorageObject","g","getStorageObject","amplifyS3ImageCss","logger","AmplifyS3Image","constructor","hostRef","contentType","level","Public","watchHandler","load","componentWillLoad","imgKey","path","body","track","identityId","debug","key","src","err","Error","render","Object","assign","alt","onLoad","handleOnLoad","onError","handleOnError","imgProps","watchers","style","amplify_s3_image"],"mappings":";AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAhC,EAAmCC,CAAC,IAAIC,IAAxC,QAAoD,qBAApD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,CAAC,IAAIC,WAAd,QAAiC,6BAAjC;AACA,OAAO,yBAAP;AACA,OAAO,sBAAP;AACA,SAASC,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,gBAArC,QAA6D,+BAA7D;AAEA,MAAMC,iBAAiB,GAAG,kHAA1B;AAEA,MAAMC,MAAM,GAAG,IAAIR,MAAJ,CAAW,SAAX,CAAf;AACA,MAAMS,cAAc,GAAG,MAAM;AACzBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjBf,IAAAA,gBAAgB,CAAC,IAAD,EAAOe,OAAP,CAAhB;AACA;;AACA,SAAKC,WAAL,GAAmB,qBAAnB;AACA;;AACA,SAAKC,KAAL,GAAaX,WAAW,CAACY,MAAzB;AACH;;AACKC,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,YAAM,KAAI,CAACC,IAAL,EAAN;AADiB;AAEpB;;AACKC,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,YAAM,MAAI,CAACD,IAAL,EAAN;AADsB;AAEzB;;AACKA,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,YAAM;AAAEE,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,IAAhB;AAAsBR,QAAAA,WAAtB;AAAmCC,QAAAA,KAAnC;AAA0CQ,QAAAA,KAA1C;AAAiDC,QAAAA;AAAjD,UAAgE,MAAtE;;AACA,UAAI,CAACJ,MAAD,IAAW,CAACC,IAAhB,EAAsB;AAClBX,QAAAA,MAAM,CAACe,KAAP,CAAa,uBAAb;AACA;AACH;;AACD,YAAMC,GAAG,GAAGN,MAAM,IAAIC,IAAtB;AACAX,MAAAA,MAAM,CAACe,KAAP,CAAa,aAAaC,GAAb,GAAmB,KAAhC;;AACA,UAAI;AACA,YAAIJ,IAAJ,EAAU;AACN,gBAAMhB,gBAAgB,CAACc,MAAD,EAASE,IAAT,EAAeP,KAAf,EAAsBQ,KAAtB,EAA6BT,WAA7B,EAA0CJ,MAA1C,CAAtB;AACH;;AACD,QAAA,MAAI,CAACiB,GAAL,SAAiBnB,gBAAgB,CAACkB,GAAD,EAAMX,KAAN,EAAaQ,KAAb,EAAoBC,UAApB,EAAgCd,MAAhC,CAAjC;AACH,OALD,CAMA,OAAOkB,GAAP,EAAY;AACRlB,QAAAA,MAAM,CAACe,KAAP,CAAaG,GAAb;AACA,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AAjBQ;AAkBZ;;AACDE,EAAAA,MAAM,GAAG;AACL,WAAQ/B,CAAC,CAACE,IAAD,EAAO,IAAP,EAAa,KAAK0B,GAAL,IAAa5B,CAAC,CAAC,KAAD,EAAQgC,MAAM,CAACC,MAAP,CAAc;AAAEL,MAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBM,MAAAA,GAAG,EAAE,KAAKA,GAA3B;AAAgCC,MAAAA,MAAM,EAAE,KAAKC,YAA7C;AAA2DC,MAAAA,OAAO,EAAE,KAAKC;AAAzE,KAAd,EAAwG,KAAKC,QAA7G,CAAR,CAA3B,CAAT;AACH;;AACkB,aAARC,QAAQ,GAAG;AAAE,WAAO;AAC3B,cAAQ,CAAC,cAAD;AADmB,KAAP;AAEpB;;AAtCqB,CAA7B;AAwCA5B,cAAc,CAAC6B,KAAf,GAAuB/B,iBAAvB;AAEA,SAASE,cAAc,IAAI8B,gBAA3B","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-83f2275b.js';\nimport { Logger } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport './constants-c8ecaa24.js';\nimport '@aws-amplify/storage';\nimport { p as putStorageObject, g as getStorageObject } from './storage-helpers-1afafead.js';\n\nconst amplifyS3ImageCss = \":host{height:inherit;width:inherit;--height:inherit;--width:inherit}img{height:var(--height);width:var(--width)}\";\n\nconst logger = new Logger('S3Image');\nconst AmplifyS3Image = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'binary/octet-stream';\n        /** The access level of the image */\n        this.level = AccessLevel.Public;\n    }\n    async watchHandler() {\n        await this.load();\n    }\n    async componentWillLoad() {\n        await this.load();\n    }\n    async load() {\n        const { imgKey, path, body, contentType, level, track, identityId } = this;\n        if (!imgKey && !path) {\n            logger.debug('empty imgKey and path');\n            return;\n        }\n        const key = imgKey || path;\n        logger.debug('loading ' + key + '...');\n        try {\n            if (body) {\n                await putStorageObject(imgKey, body, level, track, contentType, logger);\n            }\n            this.src = await getStorageObject(key, level, track, identityId, logger);\n        }\n        catch (err) {\n            logger.debug(err);\n            throw new Error(err);\n        }\n    }\n    render() {\n        return (h(Host, null, this.src && (h(\"img\", Object.assign({ src: this.src, alt: this.alt, onLoad: this.handleOnLoad, onError: this.handleOnError }, this.imgProps)))));\n    }\n    static get watchers() { return {\n        \"body\": [\"watchHandler\"]\n    }; }\n};\nAmplifyS3Image.style = amplifyS3ImageCss;\n\nexport { AmplifyS3Image as amplify_s3_image };\n"]},"metadata":{},"sourceType":"module"}