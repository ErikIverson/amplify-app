{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Hub, Credentials, Parser, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { S3Client, GetObjectCommand, DeleteObjectCommand, ListObjectsCommand, CopyObjectCommand } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { AxiosHttpHandler, SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar SET_CONTENT_LENGTH_HEADER = 'contentLengthMiddleware';\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n\nvar dispatchStorageEvent = function (track, event, attrs, metrics, message) {\n  if (track) {\n    var data = {\n      attrs: attrs\n    };\n\n    if (metrics) {\n      data['metrics'] = metrics;\n    }\n\n    Hub.dispatch('storage', {\n      event: event,\n      data: data,\n      message: message\n    }, 'Storage', AMPLIFY_SYMBOL);\n  }\n};\n\nvar localTestingStorageEndpoint = 'http://localhost:20005';\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar AWSS3Provider = function () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    this._config = config ? config : {};\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n  /**\n   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n   * different level or identityId (if source object's level is 'protected').\n   *\n   * @async\n   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n   */\n\n\n  AWSS3Provider.prototype.copy = function (src, dest, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n            _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n\n            if (!srcKey || typeof srcKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_SRC_KEY);\n            }\n\n            if (!destKey || typeof destKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_DEST_KEY);\n            }\n\n            if (srcLevel !== 'protected' && srcIdentityId) {\n              logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n            }\n\n            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {\n              level: srcLevel\n            }), srcIdentityId && {\n              identityId: srcIdentityId\n            }));\n            destPrefix = this._prefix(__assign(__assign({}, opt), {\n              level: destLevel\n            }));\n            finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n            finalDestKey = \"\" + destPrefix + destKey;\n            logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n            params = {\n              Bucket: bucket,\n              CopySource: finalSrcKey,\n              Key: finalDestKey,\n              // Copies over metadata like contentType as well\n              MetadataDirective: 'COPY'\n            };\n            if (cacheControl) params.CacheControl = cacheControl;\n            if (expires) params.Expires = expires;\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n\n            if (acl) params.ACL = acl;\n            s3 = this._createNewS3Client(opt);\n            s3.middlewareStack.remove(SET_CONTENT_LENGTH_HEADER);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(new CopyObjectCommand(params))];\n\n          case 3:\n            _c.sent();\n\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'success'\n            }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n            return [2\n            /*return*/\n            , {\n              key: destKey\n            }];\n\n          case 4:\n            error_1 = _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'failed'\n            }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n            throw error_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _b.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            emitter = new events.EventEmitter();\n            s3 = this._createNewS3Client(opt, emitter);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (!(download === true)) return [3\n            /*break*/\n            , 5];\n            getObjectCommand = new GetObjectCommand(params);\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , s3.send(getObjectCommand)];\n\n          case 3:\n            response = _b.sent();\n            emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \" + key);\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_2 = _b.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \" + error_2.message);\n            throw error_2;\n\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n\n            signer = new S3RequestPresigner(__assign({}, s3.config));\n            return [4\n            /*yield*/\n            , createRequest(s3, new GetObjectCommand(params))];\n\n          case 6:\n            request = _b.sent();\n            _a = formatUrl;\n            return [4\n            /*yield*/\n            , signer.presign(request, {\n              expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION\n            })];\n\n          case 7:\n            url = _a.apply(void 0, [_b.sent()]);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \" + url);\n            return [2\n            /*return*/\n            , url];\n\n          case 8:\n            error_3 = _b.sent();\n            logger.warn('get signed url error', error_3);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \" + key);\n            throw error_3;\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param {string} key - key of the object\n   * @param {PutObjectCommandInput[\"Body\"]} object - File to be put in Amazon S3 bucket\n   * @param {S3ProviderPutConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderPutOutput>} - promise resolves to an object with the new object's key on success\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, contentEncoding, cacheControl, expires, metadata, tagging, acl, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, params, emitter, uploader, response, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;\n            contentType = opt.contentType, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n            serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            type = contentType ? contentType : 'binary/octet-stream';\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            logger.debug('put ' + key + ' to ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key,\n              Body: object,\n              ContentType: type\n            };\n\n            if (cacheControl) {\n              params.CacheControl = cacheControl;\n            }\n\n            if (contentDisposition) {\n              params.ContentDisposition = contentDisposition;\n            }\n\n            if (contentEncoding) {\n              params.ContentEncoding = contentEncoding;\n            }\n\n            if (expires) {\n              params.Expires = expires;\n            }\n\n            if (metadata) {\n              params.Metadata = metadata;\n            }\n\n            if (tagging) {\n              params.Tagging = tagging;\n            }\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n\n            emitter = new events.EventEmitter();\n            uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n\n            if (acl) {\n              params.ACL = acl;\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , uploader.upload()];\n\n          case 3:\n            response = _a.sent();\n            logger.debug('upload result', response);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'success'\n            }, null, \"Upload success for \" + key);\n            return [2\n            /*return*/\n            , {\n              key: key\n            }];\n\n          case 4:\n            error_4 = _a.sent();\n            logger.warn('error uploading', error_4);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'failed'\n            }, null, \"Error uploading \" + key);\n            throw error_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            deleteObjectCommand = new DeleteObjectCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(deleteObjectCommand)];\n\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \" + key + \" successfully\");\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_5 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \" + key + \" failed with \" + error_5);\n            throw error_5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n   * all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('list ' + path + ' from ' + final_path);\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: maxKeys\n            };\n            listObjectsCommand = new ListObjectsCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(listObjectsCommand)];\n\n          case 3:\n            response = _a.sent();\n            list = [];\n\n            if (response && response.Contents) {\n              list = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n            }\n\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, list.length + \" items returned from list operation\");\n            logger.debug('list', list);\n            return [2\n            /*return*/\n            , list];\n\n          case 4:\n            error_6 = _a.sent();\n            logger.warn('list error', error_6);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \" + error_6.message);\n            throw error_6;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, cred, error_7;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2\n            /*return*/\n            , false];\n            cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            this._config.credentials = cred;\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_7 = _a.sent();\n            logger.warn('ensure credentials error', error_7);\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._isWithCredentials = function (config) {\n    return typeof config === 'object' && config.hasOwnProperty('credentials');\n  };\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * Creates an S3 client with new V3 aws sdk\n   */\n\n\n  AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n    var region = config.region,\n        credentials = config.credentials,\n        cancelTokenSource = config.cancelTokenSource,\n        dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n    var localTestingConfig = {};\n\n    if (dangerouslyConnectToHttpEndpointForTesting) {\n      localTestingConfig = {\n        endpoint: localTestingStorageEndpoint,\n        tls: false,\n        bucketEndpoint: false,\n        forcePathStyle: true\n      };\n    }\n\n    var s3client = new S3Client(__assign(__assign({\n      region: region,\n      credentials: credentials,\n      customUserAgent: getAmplifyUserAgent()\n    }, localTestingConfig), {\n      requestHandler: new AxiosHttpHandler({}, emitter, cancelTokenSource)\n    }));\n    return s3client;\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\n\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\n\nexport default AWSS3Provider;","map":{"version":3,"sources":["C:/Users/eriki/Documents/GitHub/amplify-app/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","ConsoleLogger","Logger","Hub","Credentials","Parser","getAmplifyUserAgent","S3Client","GetObjectCommand","DeleteObjectCommand","ListObjectsCommand","CopyObjectCommand","formatUrl","createRequest","S3RequestPresigner","AxiosHttpHandler","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","StorageErrorStrings","AWSS3ProviderManagedUpload","events","logger","AMPLIFY_SYMBOL","for","SET_CONTENT_LENGTH_HEADER","DEFAULT_STORAGE_LEVEL","DEFAULT_PRESIGN_EXPIRATION","dispatchStorageEvent","track","event","attrs","metrics","message","data","dispatch","localTestingStorageEndpoint","AWSS3Provider","config","_config","debug","getCategory","CATEGORY","getProviderName","PROVIDER_NAME","configure","amplifyConfig","parseMobilehubConfig","Storage","bucket","copy","src","dest","credentialsOK","opt","acl","cacheControl","expires","serverSideEncryption","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","_a","srcLevel","srcIdentityId","srcKey","_b","destLevel","destKey","srcPrefix","destPrefix","finalSrcKey","finalDestKey","params","s3","error_1","_c","_ensureCredentials","_isWithCredentials","Error","NO_CREDENTIALS","level","identityId","key","NO_SRC_KEY","NO_DEST_KEY","warn","_prefix","Bucket","CopySource","Key","MetadataDirective","CacheControl","Expires","ServerSideEncryption","ACL","_createNewS3Client","middlewareStack","remove","send","method","get","download","contentDisposition","contentEncoding","contentLanguage","contentType","progressCallback","prefix","final_key","emitter","getObjectCommand","response","error_2","signer","request","url","error_3","EventEmitter","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","on","progress","removeAllListeners","fileSize","Number","Body","presign","expiresIn","put","object","metadata","tagging","type","uploader","error_4","ContentType","ContentDisposition","ContentEncoding","Metadata","Tagging","upload","deleteObjectCommand","error_5","list","path","maxKeys","final_path","listObjectsCommand","error_6","Prefix","MaxKeys","Contents","map","item","substr","eTag","ETag","lastModified","LastModified","size","Size","credentials","cred","error_7","shear","customPrefix","privatePath","private","undefined","protectedPath","protected","publicPath","public","region","cancelTokenSource","dangerouslyConnectToHttpEndpointForTesting","localTestingConfig","endpoint","tls","bucketEndpoint","forcePathStyle","s3client","customUserAgent","requestHandler"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Hub, Credentials, Parser, getAmplifyUserAgent, } from '@aws-amplify/core';\nimport { S3Client, GetObjectCommand, DeleteObjectCommand, ListObjectsCommand, CopyObjectCommand, } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { AxiosHttpHandler, SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar SET_CONTENT_LENGTH_HEADER = 'contentLengthMiddleware';\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\nvar dispatchStorageEvent = function (track, event, attrs, metrics, message) {\n    if (track) {\n        var data = { attrs: attrs };\n        if (metrics) {\n            data['metrics'] = metrics;\n        }\n        Hub.dispatch('storage', {\n            event: event,\n            data: data,\n            message: message,\n        }, 'Storage', AMPLIFY_SYMBOL);\n    }\n};\nvar localTestingStorageEndpoint = 'http://localhost:20005';\n/**\n * Provide storage methods to use AWS S3\n */\nvar AWSS3Provider = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configurations\n     * @param {Object} config - Configuration object for storage\n     */\n    function AWSS3Provider(config) {\n        this._config = config ? config : {};\n        logger.debug('Storage Options', this._config);\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSS3Provider.prototype.getCategory = function () {\n        return AWSS3Provider.CATEGORY;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSS3Provider.prototype.getProviderName = function () {\n        return AWSS3Provider.PROVIDER_NAME;\n    };\n    /**\n     * Configure Storage part with aws configuration\n     * @param {Object} config - Configuration of the Storage\n     * @return {Object} - Current configuration\n     */\n    AWSS3Provider.prototype.configure = function (config) {\n        logger.debug('configure Storage', config);\n        if (!config)\n            return this._config;\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n        if (!this._config.bucket) {\n            logger.debug('Do not have bucket yet');\n        }\n        return this._config;\n    };\n    /**\n     * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n     * different level or identityId (if source object's level is 'protected').\n     *\n     * @async\n     * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n     * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n     * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n     * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n     */\n    AWSS3Provider.prototype.copy = function (src, dest, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n                        _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n                        if (!srcKey || typeof srcKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_SRC_KEY);\n                        }\n                        if (!destKey || typeof destKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_DEST_KEY);\n                        }\n                        if (srcLevel !== 'protected' && srcIdentityId) {\n                            logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n                        }\n                        srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), { level: srcLevel }), (srcIdentityId && { identityId: srcIdentityId })));\n                        destPrefix = this._prefix(__assign(__assign({}, opt), { level: destLevel }));\n                        finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n                        finalDestKey = \"\" + destPrefix + destKey;\n                        logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n                        params = {\n                            Bucket: bucket,\n                            CopySource: finalSrcKey,\n                            Key: finalDestKey,\n                            // Copies over metadata like contentType as well\n                            MetadataDirective: 'COPY',\n                        };\n                        if (cacheControl)\n                            params.CacheControl = cacheControl;\n                        if (expires)\n                            params.Expires = expires;\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                        }\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (SSEKMSKeyId) {\n                            params.SSEKMSKeyId = SSEKMSKeyId;\n                        }\n                        if (acl)\n                            params.ACL = acl;\n                        s3 = this._createNewS3Client(opt);\n                        s3.middlewareStack.remove(SET_CONTENT_LENGTH_HEADER);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(new CopyObjectCommand(params))];\n                    case 3:\n                        _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'success',\n                        }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n                        return [2 /*return*/, {\n                                key: destKey,\n                            }];\n                    case 4:\n                        error_1 = _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'failed',\n                        }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype.get = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _b.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        emitter = new events.EventEmitter();\n                        s3 = this._createNewS3Client(opt, emitter);\n                        logger.debug('get ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n                        if (cacheControl)\n                            params.ResponseCacheControl = cacheControl;\n                        if (contentDisposition)\n                            params.ResponseContentDisposition = contentDisposition;\n                        if (contentEncoding)\n                            params.ResponseContentEncoding = contentEncoding;\n                        if (contentLanguage)\n                            params.ResponseContentLanguage = contentLanguage;\n                        if (contentType)\n                            params.ResponseContentType = contentType;\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (!(download === true)) return [3 /*break*/, 5];\n                        getObjectCommand = new GetObjectCommand(params);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        if (progressCallback) {\n                            if (typeof progressCallback === 'function') {\n                                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                                    progressCallback(progress);\n                                });\n                            }\n                            else {\n                                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n                            }\n                        }\n                        return [4 /*yield*/, s3.send(getObjectCommand)];\n                    case 3:\n                        response = _b.sent();\n                        emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n                        dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, {\n                            fileSize: Number(response.Body['size'] || response.Body['length']),\n                        }, \"Download success for \" + key);\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_2 = _b.sent();\n                        dispatchStorageEvent(track, 'download', {\n                            method: 'get',\n                            result: 'failed',\n                        }, null, \"Download failed with \" + error_2.message);\n                        throw error_2;\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        signer = new S3RequestPresigner(__assign({}, s3.config));\n                        return [4 /*yield*/, createRequest(s3, new GetObjectCommand(params))];\n                    case 6:\n                        request = _b.sent();\n                        _a = formatUrl;\n                        return [4 /*yield*/, signer.presign(request, { expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION })];\n                    case 7:\n                        url = _a.apply(void 0, [_b.sent()]);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, \"Signed URL: \" + url);\n                        return [2 /*return*/, url];\n                    case 8:\n                        error_3 = _b.sent();\n                        logger.warn('get signed url error', error_3);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, \"Could not get a signed URL for \" + key);\n                        throw error_3;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Put a file in S3 bucket specified to configure method\n     * @param {string} key - key of the object\n     * @param {PutObjectCommandInput[\"Body\"]} object - File to be put in Amazon S3 bucket\n     * @param {S3ProviderPutConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderPutOutput>} - promise resolves to an object with the new object's key on success\n     */\n    AWSS3Provider.prototype.put = function (key, object, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, contentEncoding, cacheControl, expires, metadata, tagging, acl, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, params, emitter, uploader, response, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;\n                        contentType = opt.contentType, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n                        serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        type = contentType ? contentType : 'binary/octet-stream';\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        logger.debug('put ' + key + ' to ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                            Body: object,\n                            ContentType: type,\n                        };\n                        if (cacheControl) {\n                            params.CacheControl = cacheControl;\n                        }\n                        if (contentDisposition) {\n                            params.ContentDisposition = contentDisposition;\n                        }\n                        if (contentEncoding) {\n                            params.ContentEncoding = contentEncoding;\n                        }\n                        if (expires) {\n                            params.Expires = expires;\n                        }\n                        if (metadata) {\n                            params.Metadata = metadata;\n                        }\n                        if (tagging) {\n                            params.Tagging = tagging;\n                        }\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                        }\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (SSEKMSKeyId) {\n                            params.SSEKMSKeyId = SSEKMSKeyId;\n                        }\n                        emitter = new events.EventEmitter();\n                        uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n                        if (acl) {\n                            params.ACL = acl;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        if (progressCallback) {\n                            if (typeof progressCallback === 'function') {\n                                emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n                                    progressCallback(progress);\n                                });\n                            }\n                            else {\n                                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n                            }\n                        }\n                        return [4 /*yield*/, uploader.upload()];\n                    case 3:\n                        response = _a.sent();\n                        logger.debug('upload result', response);\n                        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload success for \" + key);\n                        return [2 /*return*/, {\n                                key: key,\n                            }];\n                    case 4:\n                        error_4 = _a.sent();\n                        logger.warn('error uploading', error_4);\n                        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, \"Error uploading \" + key);\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Remove the object for specified key\n     * @param {string} key - key of the object\n     * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n     */\n    AWSS3Provider.prototype.remove = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        s3 = this._createNewS3Client(opt);\n                        logger.debug('remove ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        deleteObjectCommand = new DeleteObjectCommand(params);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(deleteObjectCommand)];\n                    case 3:\n                        response = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, \"Deleted \" + key + \" successfully\");\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_5 = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, \"Deletion of \" + key + \" failed with \" + error_5);\n                        throw error_5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * List bucket objects relative to the level and prefix specified\n     * @param {string} path - the path that contains objects\n     * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n     * all objects in path\n     */\n    AWSS3Provider.prototype.list = function (path, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n                        prefix = this._prefix(opt);\n                        final_path = prefix + path;\n                        s3 = this._createNewS3Client(opt);\n                        logger.debug('list ' + path + ' from ' + final_path);\n                        params = {\n                            Bucket: bucket,\n                            Prefix: final_path,\n                            MaxKeys: maxKeys,\n                        };\n                        listObjectsCommand = new ListObjectsCommand(params);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, s3.send(listObjectsCommand)];\n                    case 3:\n                        response = _a.sent();\n                        list = [];\n                        if (response && response.Contents) {\n                            list = response.Contents.map(function (item) {\n                                return {\n                                    key: item.Key.substr(prefix.length),\n                                    eTag: item.ETag,\n                                    lastModified: item.LastModified,\n                                    size: item.Size,\n                                };\n                            });\n                        }\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, list.length + \" items returned from list operation\");\n                        logger.debug('list', list);\n                        return [2 /*return*/, list];\n                    case 4:\n                        error_6 = _a.sent();\n                        logger.warn('list error', error_6);\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, \"Listing items failed: \" + error_6.message);\n                        throw error_6;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, cred, error_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, false];\n                        cred = Credentials.shear(credentials);\n                        logger.debug('set credentials for storage', cred);\n                        this._config.credentials = cred;\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_7 = _a.sent();\n                        logger.warn('ensure credentials error', error_7);\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._isWithCredentials = function (config) {\n        return typeof config === 'object' && config.hasOwnProperty('credentials');\n    };\n    AWSS3Provider.prototype._prefix = function (config) {\n        var credentials = config.credentials, level = config.level;\n        var customPrefix = config.customPrefix || {};\n        var identityId = config.identityId || credentials.identityId;\n        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n        var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n        switch (level) {\n            case 'private':\n                return privatePath;\n            case 'protected':\n                return protectedPath;\n            default:\n                return publicPath;\n        }\n    };\n    /**\n     * Creates an S3 client with new V3 aws sdk\n     */\n    AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n        var region = config.region, credentials = config.credentials, cancelTokenSource = config.cancelTokenSource, dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n        var localTestingConfig = {};\n        if (dangerouslyConnectToHttpEndpointForTesting) {\n            localTestingConfig = {\n                endpoint: localTestingStorageEndpoint,\n                tls: false,\n                bucketEndpoint: false,\n                forcePathStyle: true,\n            };\n        }\n        var s3client = new S3Client(__assign(__assign({ region: region,\n            credentials: credentials, customUserAgent: getAmplifyUserAgent() }, localTestingConfig), { requestHandler: new AxiosHttpHandler({}, emitter, cancelTokenSource) }));\n        return s3client;\n    };\n    AWSS3Provider.CATEGORY = 'Storage';\n    AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n    return AWSS3Provider;\n}());\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\nexport default AWSS3Provider;\n"]},"metadata":{},"sourceType":"module"}